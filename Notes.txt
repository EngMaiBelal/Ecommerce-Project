https://github.com/galal-husseny/ecommerce-b2/blob/master/lang/ar/validation.php
0- create Project 
    - open command prompt
    - composer create-project laravel/laravel example-app
    - cd example-app
    - code .
    - php artisan serve

1- create db
    - phpMyAdmin
    - .env configuration

2- Migration at first for parant table 
    - php artisan make:migration create_categories:table
    - write in file migration all attributes in this table
    - write also forien key if exists
    - php artisan migrate
    - php artisan migrate:status

3- add column for custom table
    - php artisan make:migration add_phone_to_categories:table
    - write in this file syntax of D.T
    - php artisan migrate
    - php artisan migrate:status

4- create all models for tables 
    - php artisan make:model Admin
    - class User must be inherite Authenticatable
    - protected $fillable = [ all column that will be fill any time ];
    - protected $guarded  = [ all column that will not be fill any time ];
    - protected $hidden   = [ ex password, remember_token];
    - protected $casts    = ['email_verified_at' => 'datetime']; هتعامل معاه ازاي الديفلوبر وهوه محافظ علي اسمه في الداتا بيز عادي
    - Write all relationships  ex:  addresses().

5- Multi Authentication 
    - download node module  in my laptop
    - composer require laravel/breeze  
    - php artisan breeze:install    
    - npm install       
    - npm run dev 
    - Test Auth cycle
        - add phone in controller register & views.
    - Model (admin, user, seller) must implements MustVerifyEmail & extends Authenticatable
    - Write the MailTrap configuration in .env.
    - Edit in config > auth.php  file.
        - 'defaults' => ['guard' => 'web', 'passwords' => 'users']

        - 'guards' => [
                'web'   => [ 'driver' => 'session', 'provider' => 'users' ],
                'admin' => [ 'driver' => 'session', 'provider' => 'admins'],
                'seller'=> [ 'driver' => 'session', 'provider' => 'sellers']
        ],

        - 'providers' => [
            'users'   => [ 'driver' => 'eloquent', 'model' => App\Models\User::class],
            'admins'  => [ 'driver' => 'eloquent', 'model' => App\Models\Admin::class],
            'sellers' => [ 'driver' => 'eloquent', 'model' => App\Models\Seller::class],
        ],

        - 'passwords' => [
            'users'   => [ 'provider' => 'users'   , 'table' => 'password_resets'       , 'expire' => 60, 'throttle' => 60],
            'admins'  => [ 'provider' => 'admins'  , 'table' => 'admin_password_resets' , 'expire' => 60, 'throttle' => 60],
            'sellers' => [ 'provider' => 'sellers' , 'table' => 'seller_password_resets', 'expire' => 60, 'throttle' => 60],
        ]

    2- migration 
            - copy from create_password_resets and make two table
                1- create_seller_password_resets
                2- create_admin_password_resets

6- edit routes 





------------------------------------------------------------------------------------------------------
// ********* multi auth ********* //
------------------------------------------------------------------------------------------------------

1- abstract class auth implements 4 interface in contracts folder 
    a- AuthenticatedSessionController
        1- Generate New namespace.

        2- abstract class AuthenticatedSessionController extends Controller  implements
            GuardInterface,
            RouteNamePrefixInterface,
            ViewPrefixInterface

        3- Replacements
                1- return view('auth.login');
                return view($this->getViewPrefix(). 'auth.login');
        
                2- $request->authenticate();
                $request->authenticate($this->getGuard());

                3- return redirect()->intended(RouteServiceProvider::HOME); >>>> public const HOME = '/dashboard';
                return redirect()->route($this->getRouteNamePrefix() . 'dashboard');
        
                4- Auth::logout();
                Auth::guard($this->getGuard())->logout();

                5- return redirect('/');
                return redirect()->route($this->getRouteNamePrefix() . 'login');
    b- ConfirmablePasswordController extends Controller implements
        1- ViewPrefixInterface, GuardInterface, RouteNamePrefixInterface
        2- Replacements:- 
            - view($this->getViewPrefix() . 'auth.confirm-password');
            - Auth::guard($this->getGuard())......
            - ..... $request->user($this->getGuard())->email,....
            - return redirect()->route($this->getRouteNamePrefix() . '.dashboard');
    c- EmailVerificationNotificationController extends Controller 
        1- implements GuardInterface, RouteNamePrefixInterface
        2- Replacements:- 
        
            - $request->user($this->getGuard()) .... 
            - redirect()->route($this->getRouteNamePrefix() . 'dashboard');
            - $request->user($this->getGuard()) ....
    d- EmailVerificationPromptController 
        1- implements GuardInterface, RouteNamePrefixInterface, ViewPrefixInterface

        2- Replacements:- 
            - $request->user($this->getGuard()) .....
            - redirect()->route($this->getRouteNamePrefix() . '.dashboard')
            - view($this->getViewPrefix().'auth.verify-email');
    e- abstract class NewPasswordController extends Controller 
        1- implements RouteNamePrefixInterface, ViewPrefixInterface, BrokerInterface
        2- Replacements:- 
            - view($this->getViewPrefix() . 'auth.reset-password'.......
            - Password::broker($this->getBroker())->reset(......
            - ? redirect()->route($this->getRouteNamePrefix() . 'login')....         
    f- PasswordController
        1- implements GuardInterface
        2- Replacements:- 
            - $request->user($this->getGuard())......         
    g- PasswordResetLinkController
        1- implements ViewPrefixInterface, BrokerInterface
        2- Replacements:- 
            - $this->getViewPrefix() . 'auth.forgot-password');
            - Password::broker($this->getBroker())......
    h- RegisteredUserController 
        1- implements ViewPrefixInterface, GuardInterface, RouteNamePrefixInterface, ModelInterface
        2- Replacements:- 

            - view($this->getViewPrefix() . 'auth.register');
            - $user = $this->getModel()::create([
            - Auth::guard($this->getGuard())->login($user);
            - return redirect()->route($this->getRouteNamePrefix() . 'dashboard');
    i- VerifyEmailController 
        1- implements GuardInterface, RouteNamePrefixInterface
        2- Replacements:- 
            - $route = route($this->getRouteNamePrefix() . 'dashboard') . '?verified=1'; # url . ?verified=1
            - if ($request->user($this->getGuard())->hasVerifiedEmail()) { return redirect($route); }
            - if ($request->user($this->getGuard())->markEmailAsVerified()) { event(new Verified($request->user($this->getGuard())));}
            - return redirect($route);
    h- move ProfileController in Auth folder
        
        1- implements GuardInterface, RouteNamePrefixInterface, ViewPrefixInterface
        2- Replacements:- 
            - view($this->getViewPrefix() . 'profile.edit', [
            - $request->user($this->getGuard()).... 6 times
            - Redirect::route($this->getRouteNamePrefix().'profile.edit')->with('status', 'profile-updated');
            - Auth::guard($this->getGuard())->logout();
            - Redirect::route('welcome'); -->  return Redirect::to('/');
2- User/ Seller /Admin folder >> Auth 
    a- implements the properties and set(), get() methods
    b- ex:- 
        private $guard = "seller";
        private $model = Seller::class;   
        private $viewPrefix = 'seller.';   
        private $routeNamePrefix = 'sellers.';

        public function getGuard() :string { return $this->guard; }
        public function setGuard(string $guard) :void { $this->guard = $guard; }

    c- override method store if you need
            - 'email' => ['required', 'string', 'email', 'max:255', 'unique:'.$this->getModel()],


3- routes
    - put RouteName for ('welcome') -> name('welcome');
    - we use 3 middleware
        1- middleware('guest')                      -> 'register', 'login', 'forgot-password', 'reset-password'
        2- middleware('auth:web')                   -> 'verify-email', 'verify-email/{id}/{hash}', 'email/verification-notification', 'confirm-password', 'confirm-password', 'password', 'logout'
        3- middleware(['auth:web', /*'verified:web'*/]) -> dashboard, profile
    - view('user.dashboard')
    - name('users.-----')
    - namespace
4- views
    - replace route('logout') ----> route('users.logout')
    - replace Auth::user()    ----> Auth::guard('web')->user()
    - replace @include()      ----> @include('user.')

    
1- problem (verification.verify)
    - verification.email
        \vendor\laravel\framework\src\Illuminate\Auth\Notifications\VerifyEmail.php
        
    - Route::get('verify-email/{id}/{hash}', [VerifyEmailController::class, '__invoke'])
        ->middleware(['signed', 'throttle:6,1'])->name('verification.verify');  // make user verified
    
    - The user model implement interface mustVerifyEmail abstract method without implements that contains the method
    but i notice the method not implementation in the model 
    but in trait \vendor\laravel\framework\src\Illuminate\Auth\MustVerifyEmail.php
    
    - the method --> sendEmailVerificationNotification()
        $this->notify(new VerifyEmail); --> $this->notify(new VerifyUserEmail);
    - make notification 
        php artisan make:notification VerifyUserEmail 
        Replace 'verification.verify' to 'users.verification.verify'

2- problem (verification.notice)
    - انا مش عارف احدد انهي middleware 'verified:web' ??

    - Route::get('verify-email', [EmailVerificationPromptController::class, '__invoke'])
                    ->name('verification.notice'); // return email view
    
    - \vendor\laravel\framework\src\Illuminate\Auth\Middleware\EnsureEmailIsVerified.php
    الراوت استاتيك هنا في الفيل ده 
    ده الميدلوير الللي لارقل بتستخدمه عشان تشيك اليوزر فريفاي والا لا

        - هنقله في الابلكيشن Middleware المصفه filterion http requests  عن طريقif
        - وال kernel.php هغير باصص فين registered it 
            - 'verified' => \App\Http\Middleware\EnsureEmailIsVerified::class,
        - 3 Auth Middleware    
            - auth     ----> login 
            - verified ----> verified
            - guest
        - php artisan make:Middleware EnsureEmailIsVerified
        -  هنا الراوت استاتيك وانا عاوز اخليه لليوزر والسيلر مش عاوز اعمل اتنين ميدل وير اعمله برامتر
        - steps:-
            - make private array $routeGuardMap = ['web'=>'users.', 'seller'=>'sellers.'];
            - getRouteGuardMap($guard) --> handle if developer write seller, admins, ....... , any wrong route
            - add parameter handle($request, Closure $next, $guard = null, $redirectToRoute = null)
            - replace $request->user() --> $request->user($guard) ||
            - : $this->getRouteGuardMap($guard).'verification.notice')); // user or seller

3- problem (password.reset)
    - route static where  ????  ---> in \vendor\laravel\framework\src\Illuminate\Auth\Notifications\ResetPassword.php
    - I estimate (password.reset) is Class Notification
        I make same class notification in my app & change the static route
    - invoke it where     ????  ---> in \vendor\laravel\framework\src\Illuminate\Auth\Passwords\CanResetPassword.php
        sendPasswordResetNotification($token)
    - overwrride it where ????  ---> in User Model
        replace (new ResetPasswordNotification($token)) ---> (new ResetUserPassword($token))

- note:-
    الميدل وير اللي بتكون حاطه ع اي حاجه لازم تكون عارف الجارد عشان تكون عارف هتريديركت ع فين

4- problem how to make dynamic route in 2 notification class

how to get guard from model
    1- ممكن من فيل ال config
    2- معتمد علي مين عامل لوجن حاليا وممكن من نفس البراوزر اقدر ادخل يوزر وادمن وسيلر 
    فالفانكشن بتاعت سعد هتجبلي اول جارد عامل لوجن وخلاص فمستفدتش

    $guards = array_keys(config('auth.guards'));
    foreach ($guards as $guard){
        if(Auth::guard($guard)->check()) ......
    }


    3- dd($notifiable); return model user
    3- dd(config('auth.guards')); 
        return array:4 [▼ // routes\web.php:22
            "web" => array:2 [▶]
            "admin" => array:2 [▶]
            "seller" => array:2 [▶]
            "sanctum" => array:2 [▶]
        ]
مش انسب حاجه لانه معتمد ان اسم البروفايدر لازم نفس اسم التابل

- getGuardFromProvider(string $provider) :?string
        - foreach ( config('auth.guards') as $guard => $values)
        - if( $values['provider'] === $provider) --> return $guard
                                           ifnot --> return null

- getProviderFromModel(Model $model) :?string
        - foreach ( config('auth.providers') as $provider => $values)
        - if( $model instanceof $values['model'] ) --> return $provider
                                                 --> return null
- getGuardFromModel(Model $model) :?string
        - return getGuardFromProvider(getProviderFromModel($model))

- when i use the HELPER ??
        - if the input of function and output of function is general.
        - we use it as a helper.



        - make folder in app >> support >> helpers.php and add functions
        - register the helper file in composer.json
            - autoload
                    { "psr4":{},
                        "files":["app/Support/Helpers.php"] 
                    }
            - composer dumpautoload


        - protected function resetUrl($notifiable){
            - $guard = getGuardFromModel($notifiable);
            - make mapping [ web --> users, seller --> sellers, ....] 
                as mapping array in Middleware\EnsureEmailIsVerified.php
                - private array $routeGuardMap = [
                    'web'=>'users.',
                    'seller'=>'sellers.'
                ];
            - put the array in configration of the application --> config\auth.php
            - 'route_guard_map' => [ 'web'=>'users.', 'seller'=>'sellers.', ......]
            - and we can this array in any place 
            - and update the code in middleware and notifications
                - remove array and getter
            - put getRouteGuardMap in helpers : 
                - return config('auth.route_guard_map')[$guard]?? 'users.'

            
            
            - update VerifyUserEmail
                - function verificationUrl($notifiable)
                    - $guard = getGuardFromModel($notifiable);
                    - getRouteGuardMap($guard).'verification.verify',
            
            - update RestUserPassword
                - function resetUrl($notifiable)
                    - $guard = getGuardFromModel($notifiable);
                    - return url(route( getRouteGuardMap($guard) . 'password.reset', [

            - Rename classes to VerifyEmail & RestPassword & in user model
            - put two method in 2 traits:- 
                app\Traits\sendEmailVerificationNotification --> sendEmailVerificationNotification()
                app\Traits\sendPasswordResetNotification     --> sendPasswordResetNotification($token)
                
            - use these traits in your model

------------------------------------------------------------------------------------------------------------
** Seller Auth
-----------------------------------------
    1- routes
    2- Controllers/Seller/Auth
    3- resources  guard, route, url 
    4- model Seller
        class Seller extends Authenticatable implements MustVerifyEmail {
            use HasApiTokens, HasFactory, Notifiable, SendEmailVerificationNotification, SendPasswordResetNotification; 
    5- migration, tables, add shop name, phone in views, method RegisteredUsercontroller.

1- Error resources :-
    - How to make component
        * \app\View\Components\AppLayout.php
            -  return view('user.layouts.app');
        * \app\View\Components\GuestLayout.php
            -  return view('user.layouts.guest');
        * \app\View\Components\AppSellerLayout.php
            -  return view('seller.layouts.app');
        * \app\View\Components\GuestSellerLayout.php
            -  return view('seller.layouts.guest');

<x-app-layout>    --> <x-app-seller-layout>
<x-guest-layout>  --> <x-guest-admin-layout>

- middleware(guest:web)
    لو انا عامل لوجين كيوزر دايما يوديني داشبرود
    لو انا عاوز ادخل السيلر داشبورد وانا مش عامل لوجين هيرميني ع اللوجين

    Difference:- 
        1- auth  عامل login , register   --> ممنوع من login
        2- guest  مش عامل not login      --> ممنوع من dashboard

2- app\Http\Middleware\Authenticate.php

    * condition middleware اي تغير في اسم الجارد هيسمعني هنا
    * علي حسب الجارد علي حسب الميدلوير
    * ميثود الهاندل هي اللي مهمه في الميدل وير
    * عند ابوه الميدل وير
    * عاوز ابعت الجاردز لميثود الريديريكت بدون ما اعمل اوفر لود

    a- first solution 
        - unauthenticated($request, array $guards){
            throw new AuthenticationException(
                'Unauthenticated.',
                $guards,
                $this->redirectTo($request, $guards)
            );

        - redirectTo وهسيبها زي ما هي ببرامتر واحد الريكوست
        - fun_get_args اللي بباصسهم في الفانكشن

    b- حل تاني اعمل ميثود تانيه
        
        - unauthenticated($request, array $guards){
            throw new AuthenticationException(
                'Unauthenticated.',
                $guards,
                $this->redirectToRoute($request, $guards)
            );
    
        - redirectToRoute($request, $guards)
        - redirectTo($request)
                foreach ($guards as $guard) {
                    if ($guard === 'web') {
                        return route('users.login');
                    } elseif ($guard === 'seller') {
                        return route('sellers.login');
                    } elseif ($guard === 'admin') {
                        return route('admins.login');
                    }
                }
3- Problem Notes:- 
    - مشكله انه مش لاقي الجارد فبيعمل ريديركت مهمه
    - 37 مهمه شرح الجارد 
        انا دي الوقتي عامله لوجين كيوزر فجاردي الديفلوبرحبيت ادخل ع داش بورد سيلر
        هيظهر جارد السيللر يحمي الراوت ومن هنا جت اللخبطه

    - solution routes
        Replace Route::middleware('guest') -> Route::middleware('guest:seller')
        Replace Route::middleware('guest') -> Route::middleware('guest:admin')
  
4- app\Http\Middleware\RedirectIfAuthenticated.php


    a- class RedirectIfAuthenticated بيتحكم في الجيست

        - handle(Request $request, Closure $next, ...$guards){
            $guards = empty($guards) ? [null] : $guards;
            foreach ($guards as $guard) {
                if (Auth::guard($guard)->check()) {               // لو الشخص عامل لوجين
                    if ($guard === 'web') {
                        return redirect()->route('users.dashboard');
                    } elseif ($guard === 'seller') {
                        return redirect()->route('sellers.dashboard');
                    } elseif ($guard === 'admin') {
                        return redirect()->route('admin.dashboard');
                    }}}
            return $next($request); }}                            // مش شخص عامل لوجين كمل علي ريكوستك
------------------------------------------------------------------------------------------------------------
** ProfileController Updates in User, Seller **
------------------------------------------------

    - profilecontroller هعمل fire event لو غير الميل  
    - profileControler abstractAuth
        - fire mail event(new Registered($user)) //معدل علي ايميله  يبعتله ميل
        - app\Http\Controllers\AbstractAuth\Auth\ProfileController.php 
            public function update(ProfileUpdateRequest $request): RedirectResponse
                {
                    $request->user($this->getGuard())->fill($request->validated());

                    if ($request->user($this->getGuard())->isDirty('email')) {
                        $request->user($this->getGuard())->email_verified_at = null;
                    } .........}

    - notes: fire verified event(new Verified($user)) 
      // بعد ما دوس علي اللينك ده اللي بيملي الداتابيز بال توكن بعد ما ادوس علي لينك الفيرفايد في الاخر
       
------------------------------------------------------------------------------------------------------------
** Admin Auth
-----------------------------------------

1- Routes Updates
    How to insert admin in database:- 
        - run query static وخلاص عندي
        - صفحه الادمن تشتغل واحد يتسجل وبعدين اقفل
        - Route::middleware(['auth:admin', /*'verified:admin'*/])  // stop this middleware

2- make AdminFactory first
    - php artisan make:factory AdminFactory
    - class AdminFactory extends Factory
        - definition() --> 
            return [
                    'name' => fake()->name(),                                                     // package
                    'email' => fake()->unique()->safeEmail(),
                    'email_verified_at' => now(),
                    'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
                    'remember_token' => Str::random(10)

        - unverified() --> 
            return $this->state(fn (array $attributes) => [ 'email_verified_at' => null,]

3- database\seeders\DatabaseSeeder.php   الوسيط بين الداتا بيز والفاكتوري

    - admin::factory(10)->create();
        بعد ما اعمل والجدول يكون جاهز migration

    - Admin::factory()->create([
                'name' => 'Admin',
                'email' => 'admin@ecommerce.com',
                'password' => bcrypt('admin')
            ]);

    - الامر ده احطه يعد ما اعمل ميجراشن لجدول الادمن
    - php artisan db:seed
4- copy admin as seller in controllers, views, components
5- controllers without
    - EmailVerificationNotificationController
    - EmailVerificationPromptController
    - RegisteredUserController
    - VerifyEmailController
6- model
    - Admin 
        - extends Authenticatable 
        - doesnot implement MustVerifyEmail
        - use HasApiTokens, HasFactory, Notifiable, SendPasswordResetNotification only
        
7- views without views related deleted controllers
    - Delete \resources\views\seller\profile\partials\delete-user-form.blade.php
    - Delete this section  resources\views\admin\profile\partials\update-profile-information-form.blade.php

        <!-- <form id="send-verification" method="post" action="{{ route('users.verification.send') }}">
        </form> -->
        <!-- @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && ! $user->hasVerifiedEmail()) 
        @endif -->

    - profilecontroller هعمل fire event لو غير الميل  مش هعملها مع الادمن

8- components
    x-admin-app, x-admin-guest, .....
- note:- jwt package : guard "api" مبيعتمدش ع السيشن بيعتمد علي دريفر تاني هيوصل الداتا من البروفايدر للجارد
--------------------------------------------------------------------------------------------------
** testing **
-------------

- in the last test the cycle Auth and Seller Profile, Admin Profile, User Profile
    - login problem:- 

    هنخلي ال authenticate function
    تاخد parameter  $guard
    اللي احنا بنجيبه من getGuard
    في كل controller
    وجوا ال LoginRequest
    هتباصي لل guard function ال parameter ده
    - AbstractAuth -->  AuthenticatedSessionController

        public function store(LoginRequest $request): RedirectResponse
        {
            $request->authenticate($this->getGuard());      // This is the line 

            $request->session()->regenerate();

            return redirect()->route($this->getRouteNamePrefix() . 'dashboard');
        }

    - LoginRequset Class
    
        public function authenticate($guard)               // Add parameter to this method 
        {
            $this->ensureIsNotRateLimited();

            if (! Auth::guard($guard)->attempt($this->only('email', 'password'), $this->boolean('remember'))) {
                RateLimiter::hit($this->throttleKey());

                throw ValidationException::withMessages([
                    'email' => trans('auth.failed'),
                ]);
            }

            RateLimiter::clear($this->throttleKey());
        }
------------------------------------------------------------------------------------------------------
// ********* Front-End ********* //
------------------------------------------------------------------------------------------------------


اول ما ندخل تبقي صفحه الاندكس

    1- css, js , fonts, packages, front
    2- التقسيمه
    3- وال invokable controller
        مهمه واحده 
    4- يفتح صفخه الاندكس
    5- مبحددش الميثود وانا بعمل الراوت

1:42
    frontend- where? 
    1- assets public
    2- or resources server render preformance high
    3- donot depend on cdn


routes
frontend.php
require it in web.php


2/10

AdminCycle
ProfileRequest
PasswordController


------------------------------------------------------------------------------------------------------














- public/front-end-assets (user هيدخل عليه ال()
    copy images, packages, css, js and fonts folders from frontend folder.
- Public/dashboard-assets (admin, seller هيدخل عليه ال()
    copy plugins, dist from admin-assets folder.
- resources/views/user/html
    copy html pages.

notes:-
- هنخلي الصفحه اول ما تفتح تبقي صفحه الويب سايت
- واليوزر يعمل لوجين ويروح برضه لصفحه الاندكس

- خاصه باليوزر فندخلها جوه

    Route::get('/', function () {
        return view('user.welcome');
    })->name('welcome');

- وندخل الصفحهwelcome دي جوه فولدر اليوزر في الريسورس
rename and move welcome.blade.php --> resources\views\user\index.blade.php


-\routes\frontend.php
    - فيه كل الراوتس الحاصه بالفرونت وانكلودها في الويب
Route::get('/', IndexController::class)->name('users.dashboard');
    - php artisan make:controller User/IndexController --invokable
    - هيتنده عليه لوحده وليه مهمه واحده وميثود واحده ومبذكرهاش وانا بعمل الراوت 
    - public function __invoke()
        {
        return view('user.dashboard');
        }
- اي حاجه بتودي ع الداش بورد خليه يودي ع ال index 
بس هيكتر عليه في التغيرانت فهاسمي الصفحه داش بورد ولكن محتواها صفحه الاندكس بالنسبه لفيو اليوزر

-وقف الراوتس ده في \routes\users.auth.php
    // Route::get('/dashboard', function () {
        //     return view('user.dashboard');
        // })->name('dashboard');
        

--------------------------------------------------------
Templates Inheritance
---------------------

- Header, Footer, back to top ثابتين في الاب
- copy (\resources\views\user\html\index.html) content in userIndex (\resources\views\user\dashboard.blade.php)
- all css, js, images, .... href or src = from domain 
- (http://127.0.0.1:8000/frontend-assets/css/main.css) == asset('/frontend-assets/css/main.css')
  (currentDomain/frontend-assets/css/main.css)


- create resources\views\user\layouts\parent.blade.php
  include all static dashboard user content 
	- <title>@yield('title')</title>
    - @stack('links')</head>  لو حبيت ازود لينكات في الفحات الجايه جافا و css
	- @yield('content')
    - @stack('scripts')
    - delete from parent
        <!-- Slider -->
        <!-- Banner -->
        <!-- Product -->
        
    - divide the static content to component in resources\views\user\layouts\partials
        <!-- Footer --> resources\views\user\layouts\partials\footer.blade.php
        <!-- Header --> resources\views\user\layouts\partials\header.blade.php
        <!-- cart -->   resources\views\user\layouts\partials\cart.blade.php
        
    1- in parent
        @section('footer') 
        سكشن متغير
        سكشن وفي نفس الوقت yield
        وبراحتك تقدر تعمله انكلود عادي هناك في ال child
        @show

    2- in child
        @extends('user.layouts.parent')
        @section('title','Home')

        @section('content')
            المحتوي
            <!-- Slider -->
            <!-- Banner -->
            <!-- Product -->
        @endsection

        @section('footer') 
        @parent
        ................ // append doesnot override
        @endsection

    3- condition in header.php
        @auth('web') 
            <a href="#" class="flex-c-m trans-04 p-lr-25">
                My Account
            </a>
        @endauth  

        or
        
        @if(Auth::guard('web')->check())

        @endif

        <ul class="main-menu" > 
                        <li class="active-menu">
                            <a href="#" class="dis-block icon-header-item cl2 hov-cl1 trans-04 p-l-22 p-r-11">
                                <i class="zmdi zmdi-account"></i>
                            </a>
                            <ul class="sub-menu">
                                @auth('web')
                                    <li><a href="index.html">Profile</a></li>
                                    <li><a href="home-02.html">Logout</a></li>
                                @else
                                    <li><a href="index.html">Login</a></li>
                                    <li><a href="home-02.html">Register</a></li>
                                @endauth
                            </ul>
                        </li>
                    </ul>
---------------------------------------------------------------------------------
Study:-
    - how to send mail, notification ???? ' طريقتين يبعتوا ميل
    - middleware parameters ???
    - fake() package
    - gitflow
    - tamplates inheritance 
    - enums https://www.php.net/manual/en/language.enumerations.backed.php
    - method check() Auth::guard('seller')->check() || Auth::guard('admin')->check();
    - 
    - html
    - نذاكر كويس الايفنتس
    - خلصنا التيست 

---------------------------------------------------------------------------------
MyProblems:- 
    - test users\dashboard when login as sellers
    - return route('users.login'); ??? من الاول خالص وانا عندي مشكله
        - route seller register  --> validation
        - profile --> Target class معملتش use in routes
        - forget password --> name of class error
        - النيم سبيس ال profilecontroller
        - login seller, admin
        - request handel ???

    - user cycle ok.
    - seller cycle ok
---------------------------------------------------------------------------------
** github **
-------------------
** pullrequet **
طلب للتعديل بتاعي عند الادمن

    0- master branch 
    1- git clone https://github.com/galal-husseny/ecommerce-b2    // git clone in your laptop
    2-  git checkout -b mai                                       // make branch جديد  
        composer install
        .env
        php artisan key:generate
        npm install
        npm run dev
        
    3- edit the line code 
    4- galal المتحكم 
    5- in my branch
        git add .
        git commit 
        git push this is not right
        
    6- ui, migration
---------------------------------------------------------------------------------
.git.ignore
public/frontend-assets
public/dashboard-assets
package-lock.json
composer.lock
لازم 
composer, package.json يكونو موجودين
--------------------------------------------------------------------
git flow
git rm --cashed -r composer.lock

@stack('scripts')

git history 
git length

--------------------------------------------------------------------------------------------------------
problem validation:- 
--------------------------
1- ProfileController:-
    public function update(Request $request): RedirectResponse
        {
            // request جايلي لارفل متقدرش تحدد انا في انهي جارد 
            $rule = [
                'name' => ['string', 'max:255'],
                // 'email' => ['email', 'max:255', Rule::unique(User::class)->ignore($this->user()->id)],
                // 'email' => ['email', 'max:255', 'unique: table-name, column-name, without id= id userlogin],
                'email' => ['email', 'max:255', 'unique:'.$request->user($this->getGuard()).',email,'. $request->user($this->getGuard())->id],
            ];
        


2- PasswordController
    app\Http\Controllers\AbstractAuth\Auth\PasswordController.php
    update this line:-
        - 'current_password' => ['required', 'current_password']
        - 'current_password' => ['required', 'current_password:'.$this->guard]


--------------------------------------------------------------------------------------------------------
we will add:-
--------------------------
    1- facebook login 
    2- caption robot

------------------------------------------

add in .gitignore 
    /public/frontend-assets
    /public/dashboard-assets
    composer.lock
    package-lock.json
-----------------------------------------------------------------------------------------------------------------
translation:
- edit all pages in two lang 
    - two folders in lang (en, ar)
    - validation , messages files with the same keys and different content (download from internet)
        - call it in blade by
        -   @if ($errors->get('phone'))
                <ul class='text-sm text-red-600 dark:text-red-400 space-y-1 mt-2'>
                    @foreach ($errors->get('phone') as $message)
                        <p class="text-danger">{{ $message }}</p>
                    @endforeach
                </ul>
            @endif
    - i should be known that the content of pages are divides to 3 types 
        1- didnot translate 
        2- db translation
        3- can be translate 
- after translate all pages, we install mcamara package  ( https://github.com/mcamara/laravel-localization )
- in the parent page:-
    @if (App::currentLocale() == 'en')
        <html lang="en" dir="ltr">
    @else
        <html lang="ar" dir="rtl">
    @endif

- In the header page:-
هيعملي لينك يبدل بين اللغات زي زرار 
    <ul> <li>
             @foreach (LaravelLocalization::getSupportedLocales() as $lang => $value)
                @if ($lang == App::currentLocale())
                    @continue
                @endif
                <a rel="alternate" hreflang="{{ $lang }}" href="{{ LaravelLocalization::getLocalizedURL($lang, null, [], true) }}"class="flex-c-m trans-04 p-lr-25">
                    {{ Str::upper($lang) }}
                </a>
            @endforeach
    </ul> </li>
------------------------------------------------------------------------------------------

1- insert in db category, product, seller

2- IndexController
    - $products = Product::select('id', 'name', 'sale_price')->limit(16)->get();
    - return view('user.dashboard', compact('products'));

3- dashboard view
    - forloop $product depond on App::currentLocale().
    - https://github.com/spatie/laravel-translatable.
    - handel it with package in model, setup, dashboard view.
----------------------------------------------------------------------------------------------------
- How to deal with spatie/laravel-translatable
   1- download package
   2- Category Migration -->   $table->string('name');    
   3- Category Model --> 
            use HasTranslations;
            protected $fillable = ['name'];
            public $translatable = ['name'];  --> ده هيخلي الاسم يقبل json 
    4- lang --> ar folder, en folder
        return [
            'name_ar' => 'Arabic Name',
            'name_en' => 'English Name',
            'submit' => 'Submit'
        ];
    5- CategoryController

         - create(){
            $categories = Category::all();
            return view('category', compact('categories'));

        - store(Request $request)
            // return $request; --> {"_token": "","name_ar": "تليفونات","name_en": "Phones"}
           $request->validate([
            'name.*'=>['required'],
            ]);
    
            $category = Category::create([
                'name'=> $request->name
            ]);
    
            if(!$category){ Session::flash("error", "something went wrong");  return redirect()->back(); }
            Session::flash("error", "Category added Successfully");
            return redirect()->back();
        6- form

          <form class="w-50 m-auto mt-5" action="{{route('category.store')}}"  method="POST">
                @csrf
                <div class="mb-3">
                    <label for="exampleInputName1" class="form-label">{{__('frontend.name_ar')}}</label>
                    <input name="name[ar]" type="text" class="form-control" id="exampleInputName1" aria-describedby="nameHelp">
                    @error('name.ar') <p class="text-danger">{{ $message }}</p> @enderror
                </div>
                <div class="mb-3">
                    <label for="exampleInputName1" class="form-label">{{__('frontend.name_en')}}</label>
                    <input name="name[en]" type="text" class="form-control" id="exampleInputName1" aria-describedby="nameHelp">
                    @error('name.en') <p class="text-danger">{{ $message }}</p> @enderror
                
                </div>
                <button type="submit" class="btn btn-primary">{{__('frontend.submit')}}</button>
            </form>
        6- In view عشان هعرض الداتا بقي

                @foreach($categories as $category)
                    {{ $category->getTranslation('name', App::currentLocale()) }}
                @endforeach


-----------------------------------------------------------------------------------------------------
الفرق بين حساب البائع وحساب البائع الخاص بك 

    - انا يوزر فعاوز اعمل اكونت سيلر وهيطلب منك حاجات زياده 
    - new table ( sellers and in the same acount )/ فيه المعلومات الزياده اللي محتاجها هدخل فيه بيانات / بيورث من اليوزر ملوش شخصيه& user_id 
    - وساعتها لازم تكون يوزر عشان تبقي سيلر 
    - وكمان الجارد هيكون user 
    - جارد جديد يعني سيشن جديد وجدول جديد بمعلومات جديده فانا هنا هحتاج بس يوزر وادمن
-----------------------------------------------------------------------------------------------------
crud product in seller:- 
------------------------------------------------------
    1- php artisan make:controller ProductsController --resource
    2- Route::prefix('sellers')->name('sellers.')
        ->middleware(['auth:seller', 'verified:seller'])->group(function() { 
        Route::resource('products', ProductsController::class);});
    3- In ProuctsController 
        - index()
            $products = Product::where('seller_id', Auth::guard('seller')->id())->get()
            return view('seller.products.index', compact('products'))
    4- view /seller /products 
        - index داتا تابل
        - create folder Enums/CategoryEnum.php
            enum CategoryEnum :int { case ACTIVE = 1;  case NOT_ACTIVE = 0; }
            https://www.php.net/manual/en/language.enumerations.backed.php
    5- In ProuctsController 
        - create()
            $categories = Category::where('status', CategoryEnum::ACTIVE->value)->get();
            return view('seller.products.create', compact('categories'));

        - store()
            - create validation request in this path  ----> app\Http\Requests\Product\StoreProductRequest.php
            - StoreProductRequest extends FormRequest
                    - authorize() { return Auth::guard('seller')->check() || Auth::guard('admin')->check(); }
                        - request can be sharables between many controllers //
                        - check() method return (yes or no).

                    - rules() --> return [
                                "name"   => ['required', 'array:ar,en'],
                                'name.*' => ['required', 'min:2', 'max:128'],

                                "description" => ['required', 'array:ar,en'],
                                'description.*' => ['nullable', 'min:2', 'max:1000000'],

                                "purchase_price" => ['required', 'numeric', 'min:1', 'max:99999999.99'],
                                "sale_price"     => ['required', 'numeric', 'min:1', 'max:99999999.99'],
                                وخلي سعر البيع يكون اعلي من الشراء

                                "quantity" => ['required', 'integer', 'min:1', 'max:999'],
                                "status"  => ['required', 'in:0,1'],
                                "image"   => ['required', 'mimes:png', 'max:1024'],

                                "category_id" => ['required', 'integer', 'exists:categories,id']]
            - تظبيط الفيو 
            - ازاي اجيب الحاجات المترجمه
                @if ($errors->any())
                    <div class="alert alert-danger">
                        <ul>
                            @foreach ($errors->all() as $error)
                                <li>{{ $error }}</li>
                            @endforeach
                        </ul>
                    </div>
                @endif
                
                <form method="post" action="{{ route('sellers.products.store') }}" enctype="multipart/form-data">
                    @csrf
                    
                    <input type="text" name="name[en]" class="form-control" id="name_en">

                    <input type="text" name="name[ar]" class="form-control" id="name_ar">
                    @if ($errors->get('name.ar'))
                        <ul class='text-danger  space-y-1 mt-20'>
                            @foreach ($errors->get('name.ar') as $message)
                                <p class="text-danger">{{ $message }}</p>
                            @endforeach
                        </ul>
                    @endif
                    
                    <input type="number" name="purchase_price" class="form-control" id="purchase_price">             
                    <input type="number" name="sale_price" class="form-control"  id="sale_price">
                    <input type="number" name="quantity" class="form-control" id="quantity">
                   
                    @if ($errors->get('quantity'))
                        <ul class='text-danger  space-y-1 mt-20'>
                            @foreach ($errors->get('quantity') as $message)
                                <p class="text-danger">{{ $message }}</p>
                            @endforeach
                        </ul>
                    @endif

                    <select name="status" class="form-control" id="status">
                        <option value="" disabled selected></option>
                        <option value="1">{{__('seller.add_product.active')}}</option>
                        <option value="0">{{__('seller.add_product.not_active')}}</option>
                    </select>
                    
                    <select name="category_id" class="form-control" id="category_id">
                        @foreach ($categories as $category)
                            <option value="" disabled selected></option>
                            <option value="{{$category->id}}">{{$category->name}}</option>
                        @endforeach
                    </select>
                                        
                    <textarea class="form-control" name="description[en]" placeholder="{{__('seller.add_product.description_en')}}"></textarea>
                    <textarea class="form-control" name="description[ar]" placeholder="{{__('seller.add_product.description_ar')}}"></textarea>

                    <input type="file" class="d-none" name="image" id="file" onchange="loadFile(event)">
                    <label for="file">
                        <img src="{{asset('custom-images/default.png')}}" alt="default" class="w-100 " id="image" style="cursor: pointer">
                    </label>

                    <button type="submit" class="button-general w-50"> {{__('seller.add_product.submit')}} </button>               
                </form>
            
                @push('scripts')
                    <script>
                        var loadFile = function(event) {
                            var output = document.getElementById('image');
                            output.src = URL.createObjectURL(event.target.files[0]);
                            output.onload = function() {
                            URL.revokeObjectURL(output.src) // free memory
                            }
                        };
                    </script>
                @endpush

----------------------------------------------------------------------------------------------------
how to remove tailwind from the all project (task)
----------------------------------------------------------------------------------------------------
    - store()
        - validation (form request)       
            - C:\xampp\htdocs\studing\ecommerce-b2\app\Http\Requests\Product\StoreProductRequest.php
            - difference between ($request->all, validated(), only(), expect())
            - validated(), only() اللي بنعتمد عليهم

        - developer generate code for seller in trait
            - unique identifier for التعامل اللي مش مباشر in stock.
            - unique identifier for التعامل المباشر )(التليفون والميل ) تعامل مع الداتا بيز in db
            - add specs (الرامات البطاريه ......).

        - image uploaded by two methods:-
            - laravel (المنحه)
            - package images (polymorphic relationship)
                - بيكون فيه جدول للميديا وببقي محتاج اسم الجدول صاحب الصوره وكمان ال id(modal_type, modal_id)
                - images table id, name, type (تبع مين user, seller) , type-id (user-id)
                        - Disks meaning :-
                            --> disk الوندز متقسم عشان التنظيم والداتا متروحش لو عملت ويندز جديد
                            --> C:\xampp\htdocs\studing\ecommerce-b2\config\filesystems.php
                            
                                - local  ---> not (accessable اقدر اوصلها باليووارال)(ملف جيسون و عقد و.....)     laravel store in it (by default)
                                - public ---> accessable by url (اي حد يقدر يعملها اكسس)     package store in it (by default)
                                - s3 (زي الجوجل درايف محفوظه وبالفلوس من امازون) هشتري ارقام اللي في الاراي وكمان اعرف اللارفل ازاي بترفعه 
                                    زي جوجل درايف اي نوع من انواع الفيلات cloud storage to aws(amazon web service paid)

                - laravel media library  https://spatie.be/docs/laravel-medialibrary
                    - خدبالك انها تكون اخر version
                    - composer require "spatie/laravel-medialibrary:^10.2"
                    - php artisan vendor:publish --provider="Spatie\MediaLibrary\MediaLibraryServiceProvider" --tag="migrations"
                    - php artisan migrate
                    - php artisan vendor:publish --provider="Spatie\MediaLibrary\MediaLibraryServiceProvider" --tag="config"
                - Automatic will appear this file
                    - C:\xampp\htdocs\studing\ecommerce-b2\config\media-library.php
                - Prepearing modal
                    - implements HasMedia interface
                    - use InteractsWithMedia trait
                    - use function registerMediaConversions() method to crop image

                - Associate media
                    - ProductController
                    - $request->validated() --> هيرجعلي اللي موجود في الfillable
                                                حتي لو انا مدخل الصوره في الفيو والا كاني شايفها

                - store(StoreProductRequest $request)
                    1- generate code
                        $code = genProductCode();
                    2- validation  هيرجعلي اللي موجود في الfillable حتي لو انا مدخل الصوره في الفيو والا كاني شايفها
                    3- $product = Product::create(array_merge($request->validated(), 
                        ['code' => $code,
                        'seller_id' => Auth::guard('seller')->id() //محتاجها وانا بعمل login]));
                        $product->addMediaFromRequest('image')->toMediaCollection('products'); //image = name of key  //CollectionColumn products
                        return redirect()->route('seller.products.index');}
--------------------------------------------------------------------------------------------------------------------------
- How to make success alart ?
---------------------------------
    - sweet alert script handel https://sweetalert2.github.io/#usage         
        1- In parent view 
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        2- In index view --> check the session
                @if(session()->has('success')) 
                    <script>
                        Swal.fire(
                            'Good job!',
                            '{{session()->get("success")}}',
                            'success'
                        )
                    </script>
                @endif
                @if(session()->has('error'))
                    <script>
                        Swal.fire(
                            'Something went wrong!',
                            '{{session()->get("error")}}',
                            'error'
                        )
                    </script>
                @endif

        3- create file lang\ar\general.php & lang\en\general.php
            <? php
                return [
                    'messages'=> [
                        'success' => 'تمت العمليه بنجاح ',
                        'updated' => 'تم التعديل بنجاج',
                        'created' => 'تمت الاضافه بنجاح',
                        'deleted' => 'تم الحذف بنجاح',
                        'error' => 'فشلت العمليه',
                    ]
                ]; 

        4- In controller
            return redirect()->back()->with('success', __('general.messages.deleted'))
    
--------------------------------------------------------------------------------------------------------
- The errors of media-laravel package 
    - version package
    - gb library extension 
        https://stackoverflow.com/questions/39990516/laravel-intervention-image-gd-library-extension
--------------------------------------------------------------------------------------------------------
- index.php
    - <a> </a>    --> by default get request
    - get         --> sellers.products.show       --> sellers/products/{product}
    - put patch   --> sellers.products.update     --> sellers/products/{product}
    - delete      --> sellers.products.destroy    --> sellers/products/{product}

    - <a href="{{route('sellers.products.show', $product->id)}}" class="btn btn-sm btn-success my-2 rounded-pill d-inline"> {{__('seller.all_products.show')}} </a>
    - <a href="{{route('sellers.products.edit', $product->id)}}" class="btn btn-sm btn-primary my-2  rounded-pill d-inline"> {{__('seller.all_products.edit')}} </a>
    - <form class="" action="{{route('sellers.products.destroy', $product->id)}}" method="post" class="d-inline">
            @csrf
            @method('DELETE')
            <button class="btn btn-sm btn-danger  my-2 rounded-pill x" type="submit">
                {{__('seller.all_products.delete')}}
            </button>
       </form>
-------------------------------------------------------------------------------------------------
RoutePrameter:-
    - كل ما يبعت id هتروح تجيبه وتعمله find, fail
    - or send it as route parameter
    - destroy(Product $product) دي معناها id من جدول المنتج
    
-------------------------------------------------------------------------------------------------
    - destroy($id)
        - Product::whereId($id)->delete();
        - Product::whereSalePrice(11)->delete();
        - Product::where("id", = ,$id)->delete();
        الثلاث سطور اللي فوق نفس المعني هوه هنا بيقول روح دور في الجدول بالقيمه دي طريقه مختصره
        
        علشان يمسح صورته هات المنتج الاول وبعدين اعمل مسح ليه ع خطوتين 
        $product = Product::findOrFail($id)
        $product->delete();
        return redirect()->back()->with('success', __('general.messages.deleted'))
-------------------------------------------------------------------------------------------------
- How to custom the Media folder according to name of model 
    - edit the path generator in ( config > media-library.php > 'path_generator')
        from  => Spatie\MediaLibrary\Support\PathGenerator\DefaultPathGenerator::class,
        to    => App\MediaLibrary\CustomPathGenerator::class,
    
    - create new folder app/MediaLibrary/CustomPathGenerator.php 
        use App\Models\Product;
        use Spatie\MediaLibrary\MediaCollections\Models\Media;
        use Spatie\MediaLibrary\Support\PathGenerator\PathGenerator;

        class CustomPathGenerator implements PathGenerator
        {
            public function getPath(Media $media) : string
            {
                $path = explode('\\', $media->model_type); //return product
                return end($path) . '/' . $media->id . '/';//return product/1/
            }

            public function getPathForConversions(Media $media) : string
            {
                return $this->getPath($media) . 'conversions/';
            }

            public function getPathForResponsiveImages(Media $media): string
            {
                return $this->getPath($media) . 'responsive/';
            }
        }
----------------------------------------------------------------------------------------------
- edit()
    - repeated code can we write it in parent |OR| resources\views\seller\layouts\partials\errors.blade.php and include it
        @if ($errors->any())
            <div class="alert alert-danger"><ul>
                @foreach ($errors->all() as $error)<li>{{ $error }}</li>@endforeach 
            </ul></div>
        @endif
    - <form method="post" action="{{ route('sellers.products.update', $product->id) }}" enctype="multipart/form-data">
    - <img src="{{$product->getFirstMediaUrl('products')}}" alt="default"
    
---------------------------------------------------------------------------------------------- 
- How to handel data form ?
----------------------------
    - In createView.php

        - (Array) <input name= "name_en" value = " {{old('name.en')}} "> 
        - (text)  <input name= "email"   value = " {{old('email')}} ">

        - (selectBox) check value of option (static)
            - <option {{ old('status') === '1' ? 'selected' : ""}} value="">
            - <option {{ old('status') === '0' ? 'selected' : ""}} value="">
            OR
            - <option @selected(old('status') === '1' ) value="">
            - <option @selected(old('status') === '0' ) value="">

        - (selectBox) check value of option (DB)
            - <option @selected(old('category_id')==$category->id) value="{{$category->id}}">{{$category->name}}</option>

        - (Text Area)
            - <textarea> {{old('description.en')}} </textarea>

    - In updateView.php ??
        في حاله فتح الصفحه لاول مره هات من الداتا بيز كتبت انا احتف بقي باللي كتبته
        - {{old('quantity',$product->quantity)}}
------------------------------------------------------------------------------------------
- Create model for verify email to user in home page
    @auth('web')
    @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && !$user->hasVerifiedEmail())
??????
  <!-- Modal Verify Email -->
    @auth('web')
        @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && !$user->hasVerifiedEmail())

            <div class="modal flex-c-m m-auto w-50 trans-04 modal-verify-email" id="modal_verify_email">
                <div class="container p-t-80 ">
                    <div class="bg-light m-auto bor10 p-lr-70 p-t-55 p-b-70 p-lr-15-lg w-full-md">

                        <button class="flex-c-m btn trans-04 mb-4 close-modal-email-verify" onclick="closeModal()">
                            <img src="{{ asset('frontend-assets/images/icons/icon-close2.png') }}" alt="CLOSE">
                        </button>

                        <div class="mb-4 text-sm text-gray-600 dark:text-gray-400">
                            {{ __('user.auth.verify_email.verify_email_head') }}
                        </div>

                        @if (session('status') == 'verification-link-sent')
                            <div class="mb-4 font-medium text-sm text-green-600 dark:text-green-400">
                                {{ __('user.auth.verify_email.verify_email_confrmation') }}
                            </div>
                        @endif
                        <form method="POST" action="{{ route('users.verification.send') }}">
                            @csrf

                            <!-- Logo desktop -->
                            <a href="#" class="logo p-t-20">
                                <img src="{{ asset('frontend-assets/images/icons/logo-01.png') }}" alt="IMG-LOGO" style="margin: auto; padding-bottom: 20px;">
                            </a>

                            <button class="flex-c-m stext-101 cl0 w-50 bg3 bor1 hov-btn3 p-lr-15 trans-04 pointer mx-auto m-t-6">
                                {{__('user.auth.verify_email.confirm')}}
                            </button>
                        </form>
                        <form method="POST" action="{{ route('users.logout') }}">
                            @csrf

                            <button class="flex-c-m stext-101 cl0 w-50 bg3 bor1 hov-btn3 p-lr-15 trans-04 pointer mx-auto m-t-6">
                                {{__('user.auth.verify_email.logout')}}
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        @endif
    @endauth
<script>
    function closeModal(){
        document.getElementById("modal_verify_email").style.opacity = "0";
    }
    $('body').click(function (event){
        if(!$(event.target).closest('#modal_verify_email').length && !$(event.target).is('#modal_verify_email')) {
            $("#modal_verify_email").hide();
        }
    });
</script>

--------------------------------------------------------------------------------------------------------------------------
17/3/2023
---------------
1- How to preview image:-

الصور جوه فولدر البابلك و اي فولدر تاني انا معرفش اعمله اكسس في اليورل
php artisan storage:link ( مره واحده فقط symbolic link ) uptodate  and not dublicate storage size
هنا هيعمل short cut( public folder in storage folder) to ( public folder)

    - generate link by current domain 
    - edit this line in congig/filesystem/ public
            'url' => env('APP_URL').'/storage'  --> '/storage',

        - first solution asset(.....)in view
        - another solution override function geturl() in CustomUrlGenerator
        
        - in edit blade, show blade :-
            <img src="{{ $product->getFirstMediaUrl('products') }}" alt="default" class="w-100 " id="image" style="cursor: pointer">
            <img src="{{ $product->getFirstMediaUrl('products') }}" class="img-fluid rounded-start" alt="...">
        - in create blade :-
            <img src="{{asset('custom-images/default.png')}}" alt="default" class="w-100 " id="image" style="cursor: pointer">

2- slug :-
    صفحه التعديل عاوزه تعرف اي منتج يتعرض انا ببعت الid في ال url
    لازم يكون في الurl علشان اقدر افتح الصفحه و دي مش حاجه سكيور  و 
    الحل نعبر عن المنتج بحاجه تانيه غير الid  بحاجه اسمها slug

    - Advantages:-
        - more user friendly ---> SEO  مهم في ال
        - hide id from url to more secure
        - نفس اسم المنتج بدون مسافات new-labtop 
        - ولازم تكون unique
        - for 2 seller with the same slugProduct 
            - الويب سايت يعترض او
            - يا هتزود ارقام في الاخر
    - how to create slug:-
        - by php str_replace(" ","-","hello mai") ---->hello-mai واتاكد انه مش متكرر طول الوقت
        - by laravel (::slug ) in documentation
        - by package (laravel-sluggable-spatie) https://github.com/spatie/laravel-sluggable
    - when i can repeate the slug?
        ممكن السلج تتكرر انا وحد غيري محتاج نفس الحاجه في نفس الصفحه ولكن السيرش مختلف
        بتفرج ع ماتش الاهلي مع غانا  والزمالك مع بعض في نفس الصفحه نفس ال destenation
    - steps:-
        - install package.
        - integrated with translatable laravel.
        - edit the product model
            use HasTranslatableSlug
            public $translatable = ['name', 'description', 'slug'];
            getSlugOptions(): SlugOptions{ return SlugOptions::create()
                                            ->generateSlugsFrom('name')
                                            ->saveSlugsTo('slug')
                                            ->usingLanguage(false);}


        - edit migration table product by column slug --> json('slug')
        
            php artisan make:migration add_slug_to_products --table="products"
                up()   -->  Schema::table -->  $table->json('slug');
                down() -->  Schema::table -->  $table->drop('slug');
            php artisan migrate
        
        - مينفعش اعمل تعديل ع منتج معندوش اسلج

    - problem بيرجع فرانكو :-
        - حلها في ال product model 
            - language(false)
            - trait  --> use EscapeUnicodeJson
 
    - The difference between:-
        {product:slug} modelBinding  معناها شوف السلاج انه برايمري كي في المودل بيندينج | معتمد  علي السلاج في الداتابيز لازم يتبعت 
        {product} modelBinding معتمد علي الايدي في الداتابيز لازم يتبعت
        {id} راوت برامتر عادي

    - The steps can be:- (modal , db, route) slug Constant
        1- depend on slug (primary key) in all url crud routes and views && send id as parameter 
            - by package (in modalFile) (طول ما انا شغال ع جدول المنتج البريمري كي هو السلاج)
                1- In sellers.php   
                        Route::get('test/{slug}/{id}, function($slug, $id){
                            $product = Product::findOrFail($id);
                            echo $product->name;
                        });
                2- and in Model > Product.php  
                        public function getRouteKeyName(){
                            return 'slug';
                        } 
                        الحل ده هوه الافضل لان قصه اللاهىيهىل لل مودل وليس في الراوت 

            - or by laravel in route file
                {product:slug}/{id} modelBinding  معناها شوف السلاج انه برايمري كي في المودل بيندينج | معتمد  علي السلاج في الداتابيز لازم يتبعت 

            - note:-
                - وانا بعدل علي المنتج هعمل ايه في السلاج
                - depend on slug as primary key
                    1- slug هثبته
                    2- slug هغيره
                        - مينفعش return redirect()->back();
                        - expired url when sherable link with friends

        2- by route file هكتب بس ( ببعت السلاج كبرامتر لكن مازال الاساسي عندي ال id) 
                - Nested route in same resource controller, route عاديه فك الريسورسز
                - We write it in routes instead of --> Route::resource('products', ProductsController::class);
                    Route::prefix('products')->name('products.')->controller(ProductsController::class)->group(function()
                        Route::get('/', 'index')->name('index');
                        Route::post('/', 'store')->name('store');
                        Route::get('/create', 'create')->name('create');
                        Route::prefix('{product}')->group(function() {
                            Route::put('/', 'update')->name('update');
                            Route::delete('/', 'destroy')->name('destroy');
                            Route::get('show/{slug?}', 'show')->name('show');
                            Route::get('edit/{slug?}', 'edit')->name('edit');
                - Note:-
                    - الفرق بين ال route parameter, model binding by id, slug another column
                    - خلي ال nullable في الاخر 
                    - {slug?} optional هنخليه في الاخر في الفانكشن وكمان في الاخر في الراوت 

                - The methods:-
                    - show(Product $product, string $slug = null) --> return view('seller.products.show', compact(['product']))
                    - edit(Product $product, string $slug = null) --> return view('seller.products.edit', compact('product', 'categories'));
                        انا محتاج السلاج في اللينكات اللي هشوفها
                        الترتيب اللي هبعته كبرامتر هنا في الميثود مهم يكون مطابق للراوتس
                
                - The View:-
                    - <a href="{{route('sellers.products.show', ['slug' =>$product->slug, 'product' => $product->id])}}" class="btn btn-sm btn-success my-2 rounded-pill d-inline"> {{__('seller.all_products.show')}} </a>
                    - <a href="{{route('sellers.products.edit', ['slug' =>$product->slug, 'product' => $product->id])}}" class="btn btn-sm btn-primary my-2  rounded-pill d-inline"> {{__('seller.all_products.edit')}} </a>
                    - <form class="" action="{{route('sellers.products.destroy', $product->id)}}" method="post" class="d-inline">
                                            
                - Show Method
                    - show (Product $product, string $slug = null )
                        return view('seller.products.show', compact('product') );
                    - view (resources\views\seller\products\show.blade.php)
                        <img src="{{ $product->getFirstMediaUrl('products') }}"
                        <td class="text-center">{{ $product->id }}</td>          
                        <td class="text-center">{{ $product->getTranslation('name', 'en') }}</td>
                        <td class="text-center">{{ $product->getTranslation('name', 'ar') }}</td>
                        <td class="text-center">{{ $product->getTranslation('description', 'en') }}</td>
                        <td class="text-center">{{ $product->getTranslation('description', 'ar') }}</td>
                        <td class="text-center">{{ $product->code }}</td>
                        <td class="text-center">{{ $product->sale_price_with_currency() }}</td>
                        <td class="text-center">{{ $product->purchase_price_with_currency() }}</td>      
                        <td class="text-center">{{ $profit = $product->sale_price - $product->purchase_price }} EGP
                        <td class="text-center">{{ $product->quantity }}</td>
                        <td class="text-center">{{ $profit * $product->quantity }}</td>
                        <td class="text-center">{{ $product->status }}</td>
                        <td class="text-center"> {{ $product->category->name }} </td>
                                     
                - Edit Method
                    edit(Product $product, string $slug = null)
                        $categories = Category::select(['id', 'name'])->where('status', CategoryEnum::ACTIVE->value)->get();
                        return view('seller.products.edit', compact($product, $categories));

                - Product/UpdateProductRequest:-
                    - authorize() -->  return Auth::guard('seller')->check() || Auth::guard('admin')->check();
                    - rules() --> { return [
                            "name" => ['required', 'array:ar,en'],
                            'name.*' => ['required', 'min:2', 'max:128'],
                            "purchase_price" => ['required', 'numeric', 'min:1', 'max:99999999.99'],
                            "sale_price" => ['required', 'numeric', 'min:1', 'max:99999999.99'],
                            "quantity" => ['required', 'integer', 'min:1', 'max:999'],
                            "status" => ['required', 'in:0,1'],
                            "category_id" => ['required', 'integer', 'exists:categories,id'],
                            "description" => ['required', 'array:ar,en'],
                            'description.*' => ['nullable', 'min:2', 'max:1000000'],
                            "image" => ['nullable', 'mimes:png', 'max:1024'],];}}
                
                
        3- or depend on id hash && slug Constant
            - هتنفع return redirect()->back();
            - وساعتها مهما غيرت في السلج لما يعمل باك هيبقي بناء ع ال id
            - ساعتها هلغي الميثود اللي في المودل وتعديلي يكون في ال web.php
                هبعت البرامتر هناك في الراوتس (slug, id)
                ولما اروح اجيب المنتج اجيبه عن طريق ال id
            - named parameter
            - $id with encryption:-
                1- hash       (لكن هنا بشفر مبعرفش ارجعها) (انا بس اللي عارف)
                2- encryption اشفر الرساله محدش فاهم غير انا واللي عاوزه يفهم)(الاتصالات)) هقدر ارجعه
            
            - Steps how to make encryption and decreption:-
                1- manual
                    - view responsible for encrypting id 
                        (crypt::encryptString($product->id))
                        (use name space before name of class )
                        
                        <a href="{{route('sellers.products.show', ['slug' =>$product->slug, 'product' => \Illuminate\Support\Facades\Crypt::encryptString($product->id)])}}" class="btn btn-sm btn-success my-2 rounded-pill d-inline"> {{__('seller.all_products.show')}} </a>
                        <a href="{{route('sellers.products.edit', ['slug' =>$product->slug, 'product' => \Illuminate\Support\Facades\Crypt::encryptString($product->id)])}}" class="btn btn-sm btn-primary my-2  rounded-pill d-inline"> {{__('seller.all_products.edit')}} </a>
                        <form class="" action="{{route('sellers.products.destroy', \Illuminate\Support\Facades\Crypt::encryptString($product->id))}}" method="post" class="d-inline">

                    - Controller responsible for decrypting id   
                        method in modal 
                        Crypt::decryptString($request->token)


                2- another method
                    a- UUID universal unique alph numeric identifiers
                        - 36 length unique string in db
                        - بدل ما يكون اعتمادي علي id هيكون معتمد علي uuid
                        - عيبه انه اسم مش رقم فالدنيا هتكون بطيئه ووقت في الداتابيز
                        - performance low in frontend
                    steps:-
                        - in model protected $appends=['UUID'];
                        - in db add column in product table.
                        - protected function uuid(): Attribute {
                                return Attribute::make(
                                    set: fnnction (string $value) { 
                                        return 'ok';
                                    }
                                );}    
                        - add it in fillable array
                    b- ULID
                        - 26 length unique string in db
                
                Note:- 
                    - حوار الانكريبت والدكريبت بدون جدول فب الداتابيز مخالف للمودل بايندنج
                        1- هنعمل middleware في النص middleware وفشل
                                - php artisan make:middleware x
                                - add it in kernal
                                - ->name('show')->midelware('x')
                            - سبب الفشل -> by default (route --> RouteModelBinding --> middleware --> controller)
                       
                        2- create two UUID, Id columns in db
                            Id  هبحث بيه ال modelBinding
                            هيغير الداتاتايب للاي دي هيبقي استرينج ومش برايمري كي
                            UUID هعمل بيه التشفير

                3- make helper function manual ( php native )  

                4- customize the resolution route
                https://stackoverflow.com/questions/71168670/how-to-pass-encrypted-id-as-route-parameter-in-laravel-route-model-binding
                
                    - Add in routeService provider to control model binding
                        method boot()
                        Route::bind('user', function ($encryptedId) {
                            return User::where('id', Crypt::decryptString ($encryptedId))->firstOrFail();
                        });
                        بس مش انسب حل مع كل مودل هيستخدم الانكربت هضطر اكرر السطرين دول لكل مودل جديد
                                    
                
                    - Create HasEncryptedIds and Use this trait in model
                        resolveRouteBinding($encryptedId, $field = null) --> 
                            return $this->where('id', Crypt::decryptString($encryptedId))->firstOrFail();
                            لو انت هتبعت ال url متشفر استخدم التريت ده
                            
------------------------------------------------------------------------------------------------------------------
24/3/2023
----------------------
- Form repeater jquery for specs table
- Scopping ( didnot repeate filteration)()
    
    1- Global Scope
        - https://laravel.com/docs/10.x/eloquent#global-scopes
        - Global scopes allow you to add constraints to all queries for a given model.
        - Laravel's own soft delete functionality utilizes global scopes to only retrieve "non-deleted" models from the database.
        - Writing your own global scopes can provide a convenient, easy way to make sure every query for a given model receives certain constraints.

        - باول ما بكتبه علي المودل اي كنترولر هيستخدم المودل ده هيطبق عليه اتوماتيك
        - by default مطبق معاك
        - not readability لانه مش بيكون واضح في الكنترولر لازم ادور في المودل عشان اشوف الاسكوب
        - تقدر تطبقه علي اكتر من مودل في نفس الوقت
        
        - Steps:-
            - Folder Scopes جمب المودل
                - Class ActiveScope implements Scope
                - public function apply(Builder $builder, Model $model):void
                    $builder->where('created_at', '<', now()->subYears(2000));

            - Category Model
                - protected static function booted(): void
                    static::addGlobalScope(new ActiveScope)
                - بكده كل الكويري هتطبق عليها الفلتريشن دي في الكنترورلر
            - Controller
                - Category::all();
            - لو عاوزه ميطبقش الاسكوب
                category::withoutGlopalScope(ActiveScope::class)->get();
    
    2- Local Scope
        - by default لازم تنده عشان تطبقه
        - خاصه بالمودل اللي هيتحط فيها فقط
        - In model category 
            لازم تبدا بكلمه سكوب

            use App\Enums\CategoryEnum;
            use Illuminate\Database\Eloquent\Builder;
            public function scopeActive(Builder $query):void {
                $query->where('status', CategoryEnum::ACTIVE->value);}
        
        - In controller
            $categories = Category::popular()->active()->orderBy('created_at')->get();
            
            - To print query
                1- $categories = Category::popular()->active()->toSql();
            
                2- or laravel-depugbar package
                    - composer require barryvdh/laravel-debugbar --dev
                    - (طول ما انا شغال ديفلوبر بس واول ما يدخل برودكشن هيقف )
                    - Two queries in create project view
                        1- select * from 'sellers' where 'id' =1 limit=1  ----> from middelware auth 
                        2- select 'id','name' from 'category' where status=1 ---> from scope
            
                    - to control debug bar:-
                        .env APP_DEBUG=true
                             APP_DEBUG=false
----------------------------------------------------------------------------------------------------------------------------------------------
edit the views
-----------------
    1- Readable table products in products/index.php
        A- Status
            - Print status value
                1- $product->status ? 'active':'not active';
                2- اعطيله قيمه يجبلك اسمها CategoryEnum
                    - {{ App\Enums\CategoryEnum::tryFrom($product->status)?->name }}   
                        - dd(CategoryEnum::tryFrom(1));
                            return { 'name':'Active' , 'value':1 }
                        
                        - dd(CategoryEnum::tryFrom(0));
                            return { 'name':'Not-Active' , 'value':0 }
                        
                        - dd(CategoryEnum::tryFrom(3)); ودي مش موجود
                            attemp to read name of property null
                        
                        - App\Enums\CategoryEnum::tryFrom(1)?->name
                            ? لو اللي جاي  null متكلمش ال name
                            ومترجعليش ايرور                     
                3- Helper
                    - in Support / helpers.php
                        printEnum($enum, mixed $value): string
                        return ucfirst(strtolower(str_replace('_',' ', $enum::tryFrom($value)?->name)));
            
                    - in view
                        {{__("translate.".printEnum(App\Enums\CategoryEnum::class, $product->status))}}

            - Color status
                    - class="{{$product->status? 'text-green':'text-danger'}}"
                    or
                    - Class Directive
                        @class([
                            'font-bold',          هيتحقق دايما
                            'text-success'=> $product->status,  هيتحقق لو اللي جاي واحد ومش هيتحقق لو اللي جاي بصفر 
                            'text-danger'=> !$product->status,  مش هيتحقق طول ما اللي جاي بواحد هيتحقق لو اللي جاي بصفر
                            'text-gray'=> true    هيتحقق دايما
                            'bg-light' => false   مش هيتحقق ابدا
                        ])
        
        B-Seller name ملوش لازمه
        C- Category name
            <td>{{$product->category->name}}</td> ( من العلاقه )
            - problem:- (lazy loading) n+1
            - solution:-  
                by sql (query builder):-
                    - select, join 
                    - high preformance. (1000 query -> 1 query) 
                    - quickly without mapping

                by laravel (eloquent):-
                    Lazy loading (n+1)
                        - $product->category->name
                            - عدد الكويلاري زادت جدا بعد ما جبت اسم الكاتوجري والبريفورمنس هيقل
                            - lazy loading low preformance (n+1 problem) (1000 query -> 1001 query)

                    Eager loading (with method in controller --> eager loading) (1000 query -> 2 query)
                        - In controller index() --> $products = Product::with('category')->where('seller_id', Auth::guard('seller')->id())->get();
                        - eloquent model mapping data كل كاتيجوري نيم بصاحبها

                        - In controller show()  مش ضروري هنا اني اعمل load لانه منتج واحد
                            - $product->load('category') بدل with
                            - مع with منفعتش route model binding
                            show(Product $product, string $slug = null)
                                $product->load('category');
                                return view('seller.products.show', compact('product'));
 
    2- show Method() in controller
        $product->load('category') بدل with
        مع with منفعتش
        route model binding

    3- update Method() 
        payload الداتا اللي في الريكوست
        الكويري استرينج او الbody اللي فيها بيانات
        
        problem:-
            Delete, update هيضربوا بسبب الانكربت ايدي the payload is invalid
            اي حاجه بتعمل راوت مودل بيندينج في الكنترولر ده لازم يتعمل تشفير للايدي

        solution:-
            1- resources\views\seller\products\edit.blade.php
                <form method="post" action="{{ route('sellers.products.update',  \Illuminate\Support\Facades\Crypt::encryptString($product->id)) }}"
            2- resources\views\seller\products\index.blade.php
                <a href="{{route('sellers.products.show', ['slug'=> $product->slug, 'product' => \Illuminate\Support\Facades\Crypt::encryptString($product->id)])}}" class="btn btn-sm btn-success my-2 rounded-pill d-inline"> {{__('seller.all_products.show')}} </a>
                <a href="{{route('sellers.products.edit', ['slug'=> $product->slug, 'product' => \Illuminate\Support\Facades\Crypt::encryptString($product->id)])}}" class="btn btn-sm btn-primary my-2  rounded-pill d-inline"> {{__('seller.all_products.edit')}} </a>
                <form class="" action="{{route('sellers.products.destroy', \Illuminate\Support\Facades\Crypt::encryptString($product->id))}}" method="post" class="d-inline">
        view:- 
            - old value        
                <input type="text" name="name[en]" class="form-control" id="name_en" value="{{ old('name.en', $product->getTranslation('name', 'en')) }}">
                <input type="text" name="name[ar]" class="form-control" id="name_ar" value="{{ old('name.ar', $product->getTranslation('name', 'ar')) }}">
                <input type="number" name="purchase_price" class="form-control" id="purchase_price" value="{{ old('purchase_price', $product->purchase_price) }}">
                <input type="number" name="sale_price" class="form-control" id="sale_price" value="{{ old('sale_price', $product->sale_price) }}">
                
                <input type="number" name="quantity" class="form-control" id="quantity" value="{{ old('quantity', $product->quantity) }}">
            
                <select name="status" class="form-control" id="status">
                    <option value="1" @selected((string) old(' status', $product->status) === '1')>
                    <option value="0" @selected((string) old(' status', $product->status) === '0')>
                                
                <select name="category_id" class="form-control" id="category_id">
                        @foreach ($categories as $category)
                            <option @selected(old('category_id', $product->category_id == $category->id)) value="{{ $category->id }}">
                                {{ $category->name }}
                            </option>
                        @endforeach
                </select>

                <textarea class="form-control" name="description[en]" placeholder="{{ __('seller.edit_product.description_en') }}"> {{ old('description.en', $product->getTranslation('description', 'en')) }} </textarea>
                <textarea class="form-control" name="description[ar]" placeholder="{{ __('seller.edit_product.description_ar') }}"> {{ old('description.ar', $product->getTranslation('description', 'ar')) }} </textarea>
                                                                                                
            - status مبترجعش
                data from request return string '1'
                data from db return depend on datatype 1 as integer
                        (string)$product->status الحل
                        <option value="1" @selected((string) old(' status', $product->status) === '1')>

            - In controller
                1- validation request
                2- check image and update image
                    if $request->has('image')
                            remove the old image
                            insert the new image
                            update product in db 
                    else update in db only
                    
                3- update(UpdateProductRequest $request, Product $product)
                        if ($request->has('image')){
                            $media= $product->getFirstMedia('product');
                            $media->delete();
                            $product->addMediaFromRequest('image')->toMediaCollection('products');}
                            
                        $product->update($request->validated());
                        return redirect()->route('sellers.products.index')->with('success', __('general.messages.updated'));
    
    4- alert (delete متاكد؟) 3:20:21
        فشلنا

    5- to delete package:-
        composer update name package version or 
        امسحها ايدي من ال composer وبعدين اعمل composer install


    6- ازاي امسح تابل من الميجريشن (رول باك)
        من الpending امسحه من visualstudio

---------------------------------------------------------------------------------------------
4/7/2023
------------------
how to solve conflict local مهم
ADD specs
form repeater
create view product
عاوز اربط الspecname , spec value
    - هتدخل كل اسماء السبك في جدول الspecs
   - وقيمها فين product_specs 
   product controller مش مهمته يهندل السبكس
   http> services> specService.php
   handel specs
   assign specs to custom product
   هباصي السبكس من الريكوست الستور للسيرفيس
   dd($request)
    spec_names-> indexArray
    spec_names-> indexArray

    ممكن تدخل السبكس مره واحده ده غلط
    انا اعمل انسرت 3 مرات وكل مره اجيب ال id
        $savedIds=[];
    foreach ($specs as $spec){
        Spec::create(['name'=>$spec])
        $savedIds[] = $spec->id;
        }
        return $savedIds[];

حوار الترانسليشن هيبقي عندي 4 inputes 
وهظبط في الداتا بيز نوع السبكس json in 2 table
شكل الداتا اللي محتاجها الترانسلاتر بكدج

الفرونت يجبهالي جاهزه الاراي دي او انا اظبطها باك
    [
        'spec_names'=>[
            0=>[
                'en'=>'color',
                'ar'=>'عربي',
            ],

            1=>[
                'en'=>'material',
                'ar'=>'الخامه',
            ],
        ]
    ]

    هظبطها في جدول السبك والفنكشن الجافاسكريبت
واظبط في المودل انه ترانسليتبل ال name
package download(laravel 9) in laravel 10 مش لازم ننزلها
php artisan make:migration edit_name_column_in_specs_table
$table->json('name')->after('id')->change()
php artisan make:migration edit_value_column_in_product_spec_table
$table->json('value')->after('product_id')->change()
down هترجعه string('value',256)->change()
مشكله كل ما حد ياخد نسخه من الماستر ينزل تابل موجود فعلا الميديا
 
 هوه بيقرا البندينج من table migration 
مختلفين في الاسماء بسبب الوقت 
الحل تغير اسماء الجداول بالللي موجود في الميجريشن داتابيز في انكلود
php artisan migrate
// php artisan migrate rollback --step=2 هيرجعهالي استرينج
------------------------------------------------
 store()
 //savespecs 
 $product= new service او ابعتها dependency injection
 $specIds = $specService->saveNew($request->spec_names)

 array combine to اربط ال ids 
 idDatabase =>value 

 --------------
 service
 هحول الsavedIds to property

 public function matchIds(int $productId,array $specValue){
    forloop مهمه 10:17
    [
        [
            'product_id'=>$productId,
            'spec_id'=>$savedIds[0],
            'value'=>$specsValues[0],

        ]
    ]
 }

 saveProductSpecs ()
 هعمل لوب ع productSpecs 
ازاي ادخل داتا في الجدول الوسيط الmany to many
هدخلهم عن طريق specs or products
attach(fixed, [variable])

ابعتله البرودكت كبرامتر
$product->specs()->attach($this->productSpecs);

use trait translator in specs Model

--------------------------------------

هتظهرلي مشكله اني لما اجي ادخل الvalue لازم اعمل encode 
or
Make model to manytomany relationship
ProductSpec  
use trait, translatable value
في العلاقه ->using(ProductSpec)

-----------------------------------

1- savespecs
2- matchIds
3- saveProductSpecs
يا اما تخليهم ليهم علاقه ببعض او نربطهم ببعض
هنا في اعتماديه بسبب ال property اللي في السرفيس
هعمل return $this; في كل الميثود
---------------------------------------
او تغير الفانكشن تبقي بترجع حاجه واحده
هلغي ال 4this ---> local parameterبدالها 
static function


tasks:- 

in seller 
الغي ال chaining methods
الصوره تصغر 
multiple image
select2 with insert name
left to right
show view(specs , comment(دخل كذا واحده استاتيك بالداتا بيز))

admin dashboard
categories media
specs 
cities 
regions 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<?php

namespace App\Http\Controllers\Seller;

use App\Models\Product;
use App\Models\Category;
use App\Http\Controllers\Controller;
use App\Http\Requests\Product\StoreProductRequest;
use Illuminate\Support\Facades\Auth;
use App\Http\Requests\Product\UpdateProductRequest;
use App\Models\Spec;
use App\Services\SpecService;
use Illuminate\Http\Request;

class ProductsController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {

        $products = Product::with('category')->where('seller_id', Auth::guard('seller')->id())->get();
        return view('seller.products.index', compact('products'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $specs = Spec::all();
        $categories = Category::select(['id', 'name'])->active()->get();
        return view('seller.products.create', compact(['categories' , 'specs']));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreProductRequest $request , SpecService $specService)
    {
        $code = productCode($request->name['en']);
        $product = Product::create(array_merge($request->validated(),
        [
            'code'=> $code,
            'seller_id' => Auth::guard('seller')->id(),
        ]));
        if($images = $request->file('images')){
            foreach($images as $image){
                $product->addMedia($image)->toMediaCollection('product');
            }
        }
        $specsData = Spec::all();
        $specIds=$specService->saveSpecs($request->spec_names , $specsData);
        $productSpecs = $specService->matchIds($specIds , $request->spec_values);
        $specService->saveProductSpecs($productSpecs , $product);
        return redirect()->route('sellers.products.index')->with('success', __('general.messages.created'));
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show(Product $product, SpecService $specService, string $slug = null)
    {
        $product->load('category','reviews.user:id,name');
        $specIds = $specService->getSpecsIds($product);
        $specNames = $specService->getSpecsNames($specIds);
        $specValues = $specService->getSpecsValues($product);
        $specs = $specService->generateSpecs($specNames , $specValues);
        return view('seller.products.show', compact(['product' , 'specs']));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit(Product $product)
    {
        $categories = Category::select(['id', 'name'])->active()->get();
        return view('seller.products.edit', compact('product', 'categories'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(UpdateProductRequest $request, Product $product)
    {
        if($request->has('image')){
            $media = $product->getFirstMedia('product');
            $media->delete();
            $product->addMediaFromRequest('image')->toMediaCollection('product');
        }
        $product->update($request->validated());
        return redirect()->route('sellers.products.index')->with('success', __('general.messages.updated'));

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy(Product $product)
    {
        $product->specs()->detach();
        $product->delete();
        return redirect()->back()->with('success', __('general.messages.deleted'));
    }


}


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
28/4/2023
------------------
- ShowProductView
    ازاي اربط الصوره بالزرار
    bootstrab carousel

    - handle add multi image in createView and delete any of them

    -In view ?????
        <input id='files' type='file' name="images[]" class="d-none" multiple />
        <div id="myImg">
        </div>
    -In controller
        if($images = $request->file('images')){
            foreach($images as $image){
                $product->addMedia($image)->toMediaCollection('product');
            }
        }

    -In request
        "images" => ['required', 'array'],
        'images.*' => ['max:1024']

- Delete product with specs
    عاوز امسح من الجدول الوسيط في علاقه many to many
    - attach

    - detach  
        $product->specs()->detach();
        يوزر عاوز امسحله الرولز بتاعته 
        بمسح من الجدول الوسيط
        السطر ده بدل ما اعمل كل ده 
        === 
        // $productSpecs = ProductSpecs::where('product_id', $product->id)->get();
        // foreach($productSpecs as $productSpec){
        //     ProductSpec::where('product_id',$productSpec->product_id)->delete();
        // }
    لو انا عاوز امسح اسبك معينه اعطيله id 

--------------------------------------------------
in admin Controller
    - crud categories --> 
        1- In CategoriesController
            - index()
                $categories = Category::all();
                return view('admin.categories.index' , compact('categories'));
    
            - create()
                return view('admin.categories.create');

            - store(StoreCategoryRequest $request)
                Category::create($request->validated());
                return redirect()->route('admins.categories.index')->with('success', __('general.messages.created'));
    
            - edit(Category $category )
                return view('admin.categories.edit' , compact('category'));

            - update(UpdateCategoryRequest $request, Category $category)
                $category->update($request->validated());
                return redirect()->route('admins.categories.index')->with('success', __('general.messages.updated'));

            - destroy(Category $category)
                $category->delete();
                return redirect()->back()->with('success', __('general.messages.deleted'));
    
        2- In request
            - StoreCategoryRequest
                authorize()
                    return Auth::guard('admin')->check();

                rules()
                    "name" => ['required', 'array:ar,en'],
                    'name.*' => ['required', 'min:2', 'max:128'],
                    "status" => ['required', 'in:0,1'],
            - UpdateCategoryRequest
                authorize()
                    return Auth::guard('admin')->check();
                rules()
                    "name" => ['required', 'array:ar,en'],
                    'name.*' => ['required', 'min:2', 'max:128'],
                    "status" => ['required', 'in:0,1'],


        
-----------------------------------------------------------------------------------
    - crud regions  --> RegionsController extends Controller
        1- In Controller
            - index()
                $regions = Region::all();
                return view('admin.regions.index', compact('regions'));

            - create()
                $cities = City::select(['id','name'])->get();
                return view('admin.regions.create', compact('cities'));

            - store(RegionStoreRegionRequest $request)
                Region::create($request->validated());
                return redirect()->route('admins.regions.index')->with('success', __('general.messages.created'));
        2- In Request
            - StoreRegionRequest extends FormRequest
                authorize()
                        return Auth::guard('admin')->check();
                rules()
                    "name" => ['required', 'array:ar,en'],
                    'name.*' => ['required', 'min:2', 'max:128'],
                    "status" => ['required', 'in:0,1'],
                    "city_id" => ['required', 'integer', 'exists:cities,id'],
            - UpdateRegionRequest extends FormRequest
                authorize()
                        return Auth::guard('admin')->check();
                rules()
                    "name" => ['required', 'array:ar,en'],
                    'name.*' => ['required', 'min:2', 'max:128'],
                    "status" => ['required', 'in:0,1'],
                    "city_id" => ['required', 'integer', 'exists:cities,id'],
        3- views
            <form method="post" action="{{ route('admins.regions.store') }}"
                    enctype="multipart/form-data">
                    @csrf
                    
                <label for="name_en">{{ __('admin.add_region.name_en') }}</label>
                <input type="text" name="name[en]" class="form-control" id="name_en"
                    value="{{ old('name.en') }}">
                        
                <label for="name_ar">{{ __('admin.add_region.name_ar') }}</label>
                <input type="text" name="name[ar]" class="form-control" id="name_ar"
                    value="{{ old('name.ar') }}">
                        
                <label for="status">{{ __('admin.add_region.status') }}</label>
                <select name="status" class="form-control" id="status">
                    <option value="" disabled selected></option>
                    <option value="1">
                        {{ __('admin.add_region.active') }}</option>
                    <option value="0">
                        {{ __('admin.add_region.not_active') }}</option>
                </select>
                    
                <label for="city_id">{{ __('admin.add_region.city') }}</label>
                <select name="city_id" class="form-control" id="city_id">
                    <option value="{{__('admin.add_region.choose')}}" selected >{{__('admin.add_region.choose')}}</option>
                    @foreach ($cities as $city)
                        <option @selected(old('city_id') == $city->id) value="{{ $city->id }}">
                            {{ $city->name }}</option>
                    @endforeach
                </select>
        
                <div class="card-footer ">
                    <button type="submit" class="button-general w-50">
                        {{ __('admin.add_region.submit') }} </button>
                </div>
            </form>
-----------------------------------------------------------------------------------
    - crud cities 
        1- In CitiesController 

            - index()
                $cities = City::all();
                return view('admin.cities.index', compact('cities'));

            - create()
                return view('admin.cities.create');

            - store(StoreCategoryRequest $request)

                City::create($request->validated());
                return redirect()->route('admins.cities.index')->with('success', __('general.messages.created'));

            - edit(City $city)
                return view('admin.cities.edit', compact('city'));

            - update(UpdateCategoryRequest $request, City $city)
                $city->update($request->validated());
                return redirect()->route('admins.cities.index')->with('success', __('general.messages.updated'));

            - destroy(City $city)
                try {
                    $city->delete();
                    return redirect()->route('admins.cities.index')->with('success', __('general.messages.deleted'));
                }
                catch (\Exception $error) {
                    return redirect()->route('admins.cities.index')->with('error', __('general.cities.failed'));
                }
            
        3-views
            C:\xampp\htdocs\ecommerce-b2\resources\views\admin\cities

    - crud specifications

        1- SpecsController
       
            - index()
                $specs = Spec::all();
                return view('admin.specifications.index', compact('specs'));

            - create()
                return view('admin.specifications.create');
        
            - store(StoreSpecRequest $request, Spec $spec)
                Spec::create($request->validated());
                return redirect()->route('admins.specs.index')->with('success', __('general.messages.created'));
            - edit(Spec $spec)
                return view('admin.specifications.edit', compact('spec'));

            - update(UpdateSpecRequest $request, Spec $spec)
                $spec->update($request->validated());
                return redirect()->route('admins.specs.index')->with('success', __('general.messages.updated'));

        2- In Request 
            - StoreSpecRequest
                - authorize()
                    return Auth::guard('admin')->check();
                - rules()
                    "name" => ['required', 'array:ar,en'],
                    'name.*' => ['required', 'min:2', 'max:128', 'unique_translation:specs'],
        
            - UpdateSpecRequest
                - authorize()
                    return Auth::guard('admin')->check();
                - rules()
                    "name" => ['required', 'array:ar,en'],
                    'name.*' => ['required', 'min:2', 'max:128', "unique_translation:specs,name,{$this->spec->id},id"],
        3- views
        C:\xampp\htdocs\ecommerce-b2\resources\views\admin\regions
---------------------------------------------------------------------
- admins.php
    Route::prefix('admins')->name('admins.')->middleware(['auth:admin', 'verified:admin'])->group(function() {
        Route::prefix('categories')->name('categories.')->controller(CategoriesController::class)->group(function() {
            Route::get('/', 'index')->name('index');
            Route::post('/', 'store')->name('store');
            Route::get('/create', 'create')->name('create');
            Route::prefix('{category}')->group(function() {
                Route::put('/', 'update')->name('update');
                Route::delete('/', 'destroy')->name('destroy');
                Route::get('show/{slug?}', 'show')->name('show');
                Route::get('edit/{slug?}', 'edit')->name('edit');
            });
        });
    });

    Route::prefix('admins')->name('admins.')->middleware(['auth:admin', 'verified:admin'])->group(function() {
        Route::prefix('cities')->name('cities.')->controller(CitiesController::class)->group(function() {
            Route::get('/', 'index')->name('index');
            Route::post('/', 'store')->name('store');
            Route::get('/create', 'create')->name('create');
            Route::prefix('{city}')->group(function() {
                Route::put('/', 'update')->name('update');
                Route::delete('/', 'destroy')->name('destroy');
                Route::get('show/{slug?}', 'show')->name('show');
                Route::get('edit/{slug?}', 'edit')->name('edit');
            });
        });
    });

    Route::prefix('admins')->name('admins.')->middleware(['auth:admin', 'verified:admin'])->group(function() {
        Route::prefix('regions')->name('regions.')->controller(RegionsController::class)->group(function() {
            Route::get('/', 'index')->name('index');
            Route::post('/', 'store')->name('store');
            Route::get('/create', 'create')->name('create');
            Route::prefix('{region}')->group(function() {
                Route::put('/', 'update')->name('update');
                Route::delete('/', 'destroy')->name('destroy');
                Route::get('show/{slug?}', 'show')->name('show');
                Route::get('edit/{slug?}', 'edit')->name('edit');
            });
        });
    });

    Route::prefix('admins')->name('admins.')->middleware(['auth:admin', 'verified:admin'])->group(function() {
        Route::prefix('specs')->name('specs.')->controller(SpecsController::class)->group(function() {
            Route::get('/', 'index')->name('index');
            Route::post('/', 'store')->name('store');
            Route::get('/create', 'create')->name('create');
            Route::prefix('{spec}')->group(function() {
                Route::put('/', 'update')->name('update');
                Route::delete('/', 'destroy')->name('destroy');
                Route::get('show/{slug?}', 'show')->name('show');
                Route::get('edit/{slug?}', 'edit')->name('edit');
            });
        });
    });


-----------------------------------------------------
static SpecService
بنادي عليها بطريقه دايركت
    SpecService

    public static function saveSpecs (array $specs,  $specsData)
    {
        $specIds = [];
        foreach($specs as $spec){
            $spec = Spec::whereJsonContains('name', $spec)->firstOr(function() use($spec) {
                Spec::create(['name' => $spec]);
            });
            $specIds[]=$spec->id;
        }
        return $specIds;
    }

    public static function matchIds (array $specIds, array $specValues):array
    {
        for($i=0 ; $i<count($specIds) ; $i++){
            $productSpecs[$specIds[$i]] = ['value'=>$specValues[$i]];
        }
        return $productSpecs;
    }

    public static function saveProductSpecs (array $productSpecs , Product $product)
    {
        $product->specs()->attach($productSpecs);
    }

    public static function getSpecsIds(Product $product):array
    {
        $specIds = [];
        $productSpecs = ProductSpec::where('product_id' , $product->id)->get();
        foreach ($productSpecs as $productSpec){
            $specIds[] = $productSpec->spec_id;
        }
        return $specIds;
    }

    public static function getSpecsNames (array $specIds):array
    {
        $specNames = [];
        $specnames []= Spec::all()->only($specIds);
        foreach ($specnames[0] as $key=>$specname){
            $specNames[] = $specname->name;
        }
        return $specNames;
    }

    public static function getSpecsValues(Product $product)
    {
        $specValues = [];
        $productSpecs = ProductSpec::where('product_id' , $product->id)->get();
        foreach ($productSpecs as $productSpec){
            $specValues[] = $productSpec->value;
        }
        return $specValues;
    }

    public static function generateSpecs(array $specNames , array $specValues)
    {
        $specs = [];
        for ($i=0 ; $i< count($specNames) ; $i++){
            $specs[$specNames[$i]] = $specValues[$i];
        }
        return $specs;
    }
}


--------------------------------------------------
* Create product and add specs to this product:-
    - Laravel unique translation package
    - StoreSpecsRequest unique_translation:specs
        composer install
        how to get specific route parameter in form request?
    - StoreSpecsRequest unique_translation:specs,name,{$this->specs->id},id

* لغينا الفون للادمن واعمل داتابيز سيد

* مينفعش الجاسون يكون يونيك
table city 
edit name in city table
*********************************
ميثود الtable مبتعملش رن بالترتيب عشان كده بتظهر المشكله
*********************************

1- findOr        ---> id
2- firstOrCreate ---> withoutid

 in savespecs service
 عملتلي مشكله ضفتلي الاسبك مرتين معدلتش عليه
 ازاي نقارن بين اتنين جسون في الsql 
 الحل
 where jsoncontain الاول
 وبعدين firstor 
use specs علشان الاسكوب
------------------------------------
star review 
 star html
 zmdi stars
 in show.php view
 @for ($i=0; $i < $review->rate; $i++)

 @endfor
 @for ($i=0; $i < 5-$review->rate; $i++)
 @endfor
------------------
ReviewService
1- by query
    $reviews = Review::join('users','')->select()->where('');
2- use relationship
    $reviews =$product->reviews()->get(); موجود كل حاجه ما عدا اسم الرفيو
--------------------
وممكن حاجه احلي ابعت الرفيوز في اللود وانا بجيب الكاتوجري والسيرفز ملهمش معني


حل عشان اجيب من بلازدكت اروح لرفيو اروح ليوزر و....
nested eager loading
$product->load($category,$reviews.user:id,name)
 ---------------------------------

 bard google?
ابعاد الصور في صورة الhome 
عاوزينه يعرض علي الصفحه الرئيسيه يعرض المقصوصه
----------------------------------
عاوزه اضغط علي الصوره تجبلي داتا
ازاي ابعت فريبل من الphp للjs 

-------------------------------------------
tasks:
in seller 
    1- cycle coupon crud
        discount ---> smallInteger
        // Validation 
        * max_usage_number_per_user وانا بعمل اوردر هروح اشوف استخدم الكوبون كام مره في 
            coupon_user 
        
        * max_usage_number محتاج coupon_user 
        * min_order_value محتاج order 
        validate date 
        وانا بكريت كوبون ينفع يكون قبل الستارت داتا
        وانا بطبق كوبون مينفعش قبل الستارت دات
        create, update, apply هتختلف الvalidation
    2- 
    لو جحد عمل اوردر يجيبه 
    السيلر بيعمل كوبون مش اوفر ويشوف الاوردرات
    user create order 

**in admin crud Region
وحد السترينج يكون بنفس الupperTo lower ومفيش مسافات وبعد كده قارن
مينفعش المنطقه تتكرر في نفس المدينه لازم الاسم unique json name
جايلي من الفرونت اند اراي باللي موجود بالداتا بيز اللي هوه جوسون 
by laravel unique translation package 
custom validation rule in laravel

** when i try to delete city or region (sql error)
هنهندل ده عن طريق رساله try and catch
- destroy(City $city)
try {
    $city->delete();
    return redirect()->route('admins.cities.index')->with('success', __('general.messages.deleted'));
}
catch (\Exception $error) {
    return redirect()->route('admins.cities.index')->with('error', __('general.cities.failed'));
}

السؤال لو الوجيك بتاعي انه ممكن يمسح حتي لو في فورن كي ده بظبطه في الميجريشن وخلاص؟
منحطش اسلج في الريجون والسيتي وال

----------------------------------------------------
5/5/2023
الساعه 8
cart api 
add to cart send request
dashboard.blade.php
الزرار يكون شايل
button user id, product id
مشكله انه لازم تكون عامل لوجن وانا بعمل الكارت 
بس في حل انه مجبروش يعمل لوجن
laravel hopping cart package
هيعتمد علي السيشن
الكارت هتختلف من براوزر للتاني 
كوكيز
unique id 123 --->produvt1
ولما اعمل لوجن روح بص علي الكوكيز لو ضايف اجه في الكارت حطهم لليوزر

user-value=auth::guard(user->id) , product_id=product->id
حط للزرار كلاس مش ايدي لانه جوه لوب
لما يدوس علي الزرار هعمل get attribute to this button
همسكهم بالجافاسكريبت وابعتهم في ال api
ومحتاج اعرف اسم الdomain
{{asset('api/....')}}
ايه اللي هبعتهومحتاج امسكه في الفيو 
اليورلالميثود 
البروفايدر
الهيدر
ابعت بقي json request
الجافاسكريبت هتبعت ريكوست والباك هيستقبلها في ال api
ومش عاوز وانا بعمل addto cart الصفحه تعمل ريلود وكمان تطلع لفوق
القرار 
لو عمل اضافه لنفس المنتج مرتين زود كميته
attach
sync هتمسح القديم وتحط الجديد
syncWithoutDetaching
-------------------
CartController.php
.....

مشكله برغم انه شايف الستيتس 200 وعنده ايرور 
حط ال headers , json.stringfy
هيطبعلي الresponse

add sweet alert in dashboard user
ولما يضيف الكارت كمان الرقم اللي جمب السله يتحدث

$this->success('message', status);
$this->error('message', status);
$this->data('data','message', status )

عاوز عدد الكارتس
User::withCount('carts') 
وابعتها في الداتا تبقي موجوده في ال ريسبونس
in veiw data-notify هغير فيها 
في ال successjson 
هحط فيها العدد الصح 
ومحتاج كمانازود ال ما افتح الصفحه تكون دينامك
ظهرت مشكله العدد ناقص واحد علشان انا بجيب العدد قبل ما اعمل create
الحل زود واحد لو ضفت جديد
------------------------------
one query in multiple views
documentation view-composers
boot()
providers
create viewServiceProvider.php
config->app.php اعمله register
-------------------------------------
add to wish list مفيش اب ديت
create or delete
زوده في الميجريشن
10:05
اول ما الصفحه تفتح اللي محطوط في ال مفضله يكون واضح
لما اضغط ولما اضغط مره تانيه لما يدوس علي الفلب اغير حالته
وهنعرض كام حاجه في المفضله العدد
------------------------------------------
صفحه الفيو سيرفيز يوزر
عشان نجيب محتويات اليوزر
attributes, relations هترجعه
------------------------------------------------------------------------------------------------------
19/5/2023
------------------------------------------------------------------------------------------------------
1- middleware
    - انا في الهوم ودخلت الكارت قام قالي ارجع اعمل تسجيل دخول واول ما نعمل دخول ارجع بقي لصفحه الكارت مش الهوم
      redirect هيرجعني للصفحه اللي كنت عاوز اعملها دخول قبل ال login

    - in AuthenticatedSessionController
        public function store(LoginRequest $request){
            $request->authenticate($this->getGuard());
            $request->session()->regenerate();
            return redirect()->route($this->getRouteNamePrefix() . 'dashboard');
        }

-------------------------------------------------------------------------------------------------------
2- subTotalService by prototype design pattern
    - subTotal(CartProducts $cartProducts, float $discount = 0) :string
        {
            $subTotal = 0;
            foreach($cartProducts->getProducts() as $cartProduct){
                $subTotal += $cartProduct->getPrice() * $cartProduct->getQuantity();
            }
            $subTotalAfterDiscount = $subTotal - $discount;
            return $subTotalAfterDiscount ;
        }
-------------------------------------------------------------------------------------------------------
Apply coupon:-
------------------------------------------------------------------- 
- User::with('coupons')->withCount('coupons')->findOrFail($request->user->id) ***
    مينفعش اقوله عدلي الكوبنات اللي استخدمها اليوزر لانه هيعد الكوبونات جنرال
- $error(['coupon'=>'.......'], statusCode)
- مينفعش اعتمد علي الجافاسكريبت في اني اجيب السعر
    انا ممكن اعتمد عليه في اني اجيب id user, product
    $request->orderTotal  كده انا معتمد انها جيالي من الريكوست الجاسون في الفرونت لازم تتحسب تاني 
    $request->couponApplyDate مينفعش برده وممكن اجيبه من السيرفر

- اكبر خصم ممكن يعمله الكوبون $coupon-> max_discount_value

---------------------
الشروط اللي محتاجها؟ 
---------------------



-------------------------------------------------------------------------------------
SubTotalService prototype design pattern studying
-------------------------------------------------------------------------------------

1- Interface CartProductsInterface ---> app\Entities\CartProducts.php // object from ProductEntity
    - public function addProduct(ProductEntity $cartProduct);
    - public function getProducts();

2- CartProducts implements CartProductsInterface ---> app\Entities\CartProductsInterface.php
    - private $cartProducts = [];
    - public function addProduct(ProductEntity $cartProduct)
        $this->cartProducts []= $cartProduct;
    - public function getProducts()
        return $this->cartProducts;

3- Interface ProductEntityInterface ---> app\Entities\ProductEntityInterface.php
    public function getPrice(): float;
    public function setPrice(float $price);
    public function getQuantity(): int;
    public function setQuantity(int $quantity);

4- ProductEntity implements ProductEntityInterface ---> app\Entities\ProductEntity.php
    private $price,$quantity;
    public function getPrice():float
        return $this->price;
    public function setPrice($price)
        $this->price = $price;
    public function getQuantity(): int
        return $this->quantity;
    public function setQuantity(int $quantity)
        $this->quantity = $quantity;


5- OrderCalcs  ---> app\Services\OrderCalcs.php        // object from ProductEntity from CartProducts
    - public static function subTotal(CartProducts $cartProducts, float $discount = 0) :string
        $subTotal = 0;
        foreach($cartProducts->getProducts() as $cartProduct){
            $subTotal += $cartProduct->getPrice() * $cartProduct->getQuantity();
        }
        $subTotalAfterDiscount = $subTotal - $discount;
        return $subTotalAfterDiscount ;

6- CartController ---> app\Http\Controllers\User\CartController.php
    - public function cart(CartProducts $cartProducts, OrderCalcs $orderCalcs)
        if(Auth::guard('web')->check()){
            $user = Auth::guard('web')->user()->with(['wishlists','carts', 'addresses.region.city'])->withCount('carts','wishlists')->first();
            foreach($user->carts as $product){
                $cartProduct = new ProductEntity();
                $cartProduct->setPrice($product->sale_price);
                $cartProduct->setQuantity($product->carts->quantity);
                $cartProducts->addProduct($cartProduct);
            }
            $subTotal = OrderCalcs::subTotal($cartProducts);
            return view('user.cart', compact('user', 'subTotal'));
        }
-------------------------------------------------------------------------------------
وفصل الراوتس والكنترولز البلوج والكارت بتاعت الفرونت اند.....
ومسح الفرونت اند كنترولر

C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\ProductDetailsController.php
C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\IndexController.php
C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\ShopController.php
C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\ContactController.php
C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\CartController.php
C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\AddressController.php
C:\xampp\htdocs\ecommerce-b2\app\Http\Controllers\User\AboutController.php
-------------------------------------------------------------------------------------
- app\Http\Controllers\Admin\RegionsController.php  --->  ضاف السيتي مع كل كنترولرز
    - index()
        $regions = Region::with('city')->get();    // all attributes
        $regions = Region::with('city:name, id')   // specific attributes
        return view('admin.regions.index', compact('regions'));

-------------------------------------------------------------------------------------
RealTime js cart for total price, total
----------------------------------------
<script>
        $(document).ready(function () {
            $('.num-products').click(function () {
                let productQuantity = $('input[name="productQuantity"]').val();
                let rowNo = $(this).attr('order');
                preparTotalPrice(rowNo);
                productsPriceTotal();
            })
            
            $('.productQuantity').change(function () {
                let rowNo = $(this).attr('order');
                preparTotalPrice(rowNo);
                productsPriceTotal();
            })
            
            function preparTotalPrice(rowNo){
                let productQuantity = $('input[name="productQuantity'+ rowNo +'"]').val();
                let productPrice = $('td[name="productPrice'+ rowNo +'"]').attr('data-td');
                let totalProductPriceElement = $('td[name="totalProductPrice'+ rowNo +'"]');
                let totalProductPriceValue = productPriceTotal(productQuantity, productPrice)
                totalProductPriceElement.html(totalProductPriceValue);
                totalProductPriceElement.attr( 'data-price', totalProductPriceValue );
            }
            function productPriceTotal(productQuantity, productPrice){                
                return parseInt(productQuantity) * parseInt(productPrice);
            }
            
            function productsPriceTotal(){
                let totalProductPrice = 0;
                countOfProduct = $('#countOfProduct').attr('data-input');
                for(i = 0 ; i < countOfProduct ; i++){
                    console.log(parseInt($('td[name="totalProductPrice'+ i +'"]').attr('data-price')));
                    totalProductPrice += parseInt($('td[name="totalProductPrice'+ i +'"]').attr('data-price'));
                }
                $('.total-product-price').html( totalProductPrice );
                $('.total-product-price').attr( 'data-total-price', totalProductPrice );
            }

            productsPriceTotal();
        })
    </script>
-------------------------------------------------------------------------------------
- 3 type of merge git
-------------------------------------------------------------------------------------

- Controllers\User\CartController
    return view('user.cart', compact('user', 'subTotal'));
- views\user\cart.blade.php
    - when the totalPrice change in cart page
        يتحط عنوان فيتحط توصيل  
        او ابلاي كوبون فهيكون في الدسكاوونت 
        address محتاج حاجات كتير 

    - add new address 
        1- هعمل شرط علي وجود ادرس من عدمه
            - $user->addresses->count() هل ليه عناوين في الداتا بيز
                - هعمل لوب علي الادرس بتاعتاليوزر اسم الريلاشن addresses
                    - $user = Auth::guard('web')->user()->with(['wishlists','carts', 'addresses.region.city'])->withCount('carts','wishlists')->first();
                    - عشان كده قدرت اعمل لوووب
                    - @foreach ($user->addresses as $address) // eagerload
                
                - $address->region->city->name 
                    - nested relation موجود جوه مودل الادرس ريلاشن الريجون وجوه الريجون ريلاشن الستي ومنها الاسم 
                - @if ($address->floor) // الحاجات اللي تنفع null
                    floor: {{ $address->floor }} -
                @endif
            - مفيش يوزر الادرس
                @else 
                    <p>No Shipping Addresses yet</p>
                @endif
        -In view 
            @if($user->addresses->count())
                <div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
                    <select class="js-select2" name="time">
                        @foreach ($user->addresses as $address)   //array of object 
                            <option @selected($loop->last)>
                                {{ $address->region->city->name }},
                                {{ $address->region->name }},
                                {{ $address->street }},
                                building: {{ $address->building }} -
                                @if ($address->floor) // الحاجات اللي تنفع null
                                    floor: {{ $address->floor }} -
                                @endif
                                @if ($address->flat)
                                    flat: {{ $address->flat }} -
                                @endif
                                @if ($address->notes)
                                    notes: {{ $address->notes }} -
                                @endif
                                ({{ $address->type }})
                            </option>
                        @endforeach
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                @else 
                    <p>No Shipping Addresses yet</p>
                @endif
                </div>
                <div class="flex-w flex-m m-r-20 m-tb-5">
                    <a href="{{route('users.address.index')}}" class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
                        Add New Address
                    </a>
                </div>
        2- في الحالتين هقدر اضيف ادرس جديد
            <div class="flex-w flex-m m-r-20 m-tb-5">
                <a href="{{route('users.address.index')}}" class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
                    Add New Address
                </a>
            </div>
---------------------------------------------------------------------------------
Add New Address
----------------
    - معدلوش لازمه الابي اي هنا 
        AddressesController extends Controller
            use ApiResponses;
            store(StoreAddressRequest $request)
                Address::create($request->validated());
                return $this->success('Address created successfully');

    - مسحت الكنترولر بتاع البلوج وكمان الراوت بتاعها
    - routes/frontend.php 
        - middleware('auth:web') لازم
            Route::name('users.')->group(function() {
                Route::middleware('auth:web')->prefix('address')->controller(AddressController::class)->name('address.')->group(function() {
                    Route::get('/', 'index')->name('index')->middleware('address.redirection');
                    Route::post('/store', 'store')->name('store');
                    Route::get('/edit/{address}', 'edit')->name('edit');
                    Route::put('/update/{address}', 'update')->name('update');
                    Route::delete('/destroy/{address}', 'destroy')->name('destroy');
                });
            });

    - views/user/address/index.php [],g 
        انا محتاج هنا الصفحه يكون فيها اليوزر اللي عامل لوجن
        وكمان الادرسس الخاصه باليوزر ده
        والريجونوز كلها
    - Controller --> AddressController extends Controller
        1- public function index()
            $user = Auth::guard('web')->user();
            $addresses = Address::with('region.city')->where('user_id', $user->id)->get();
            $cities = City::where('status', 1)->get();
            return view('user.address.index', compact('addresses', 'cities'));
    - view
    
        <select class="select2" name="city_id" id="city">
            <option selected disabled> Choose City</option>
            @foreach ($cities as $city)
                <option @selected(old('city_id') == $city->id) value="{{$city->id}}"> {{$city->name}}</option>
            @endforeach
        </select>

        <select class="select2 d-none" name="region_id" id="region">
            <option selected disabled> Choose Region</option>
        </select>
    2- ajax request to regions هحتاج اجيب الريجون المتاحه للمدن اللي اختارها  
        - السيناريو اللي همشي عليه 
            city select2 لو اختار مدينه يعرض ال ريجونز بتاعتها
            لو مختارش خالص
        - Route::post('regions', [RegionsController::class, 'index']);
        - RegionsController Apis/User/regionsController.php
            - use ApiResponses;
            - index(Request $request)
                - validation in the same class instead Of form request
                    $request->validate([
                        'city_id' => ['required', 'integer']
                    ]); 
                    $regions = Region::select('id', 'name')->where('city_id', $request->city_id)->get();
                - عندي احتمالين يا اما في مناطق للمدينه
                    how to check on number of return rows of retrieved data in laravel models
                    if ($regions->count()) --> return $this->data($regions->toArray());
                    if ($regions->count())   افضل من مع الابي اي لانه مازال شايف الاراي الفاضيه متحققه if ($regions)
                
                - يا اما لسه محطتلهاش مناطق
                    else --> return $this->error(['city_id' => 'has no regions yet' ]);
                -
                RegionsController.php
                    id غلط 
                    id صح ومش ضايفله ريجونز
        - user/address/index.php
                var city_id = event.target.value;

        - event select2 --> .on('select2:select',.....)
            $('#city').on('select2:select', function(event) {
                var city_id = event.target.value;
                const url = "{{ asset('api/regions') }}";
                const method = "POST";
                const body = {
                    'city_id': city_id,
                };
                const button = $(this);
                $.ajax({
                    url: url,
                    type: method,
                    headers: {
                        'accept': 'application/json'
                    },
                    data: body,
                    success: function(result) {
                        $("#region").select2({ // turn on Select2
                            tags: true,
                            width: '100%'
                        });

                        $('#region').empty(); // Clear the options

                        $.each(result.data, function(index, value) { // append new options
                            var text = value.name.en;
                            var option = new Option(text, value.id);
                            $('#region').append(option);
                        });

                        $('#region').removeClass('d-none'); // show select 2
                    },
                    error: function(result) {
                        console.log(result);
                        Swal.fire(
                            'Failed',
                            'Something went wrong',
                            'error'
                        );
                    }
                });
            });

    - @include('components.redirect-messages') in script ---> resources\views\components\redirect-messages.blade.php
        fire message sweet alert
    - @include('seller.layouts.partials.errors')

    - StoreAddressRequest --> app\Http\Requests\Address\StoreAddressRequest.php
        - authorize()  --> return true; ????
        - rules()
            'street' => ['required', 'string', 'between:4,255'],
            'building' => ['required', 'string', 'between:1,255'],
            'floor' => ['required', 'string', 'between:1,255'],
            'flat' => ['nullable', 'string', 'between:1,255'],
            'notes' => ['nullable', 'string', 'max:255'],
            'type' => ['required', 'string', 'in:WORK,HOME'],
            'region_id' => ['required', 'integer', 'exists:regions,id'],
            'city_id' => ['required', 'integer', 'exists:cities,id']
        - how to handle the message of validation error in request ?
        - messages()
            return [
                'region_id.required' => 'The region field is required.',
                'region_id.integer' => 'The region field must be an integer.',
                'region_id.exists' => 'The region field does n\'t exists.'];

        2- public function store(StoreAddressRequest $request)
            Address::create(array_merge($request->validated(), ['user_id' => Auth::guard('web')->id()]));
            Handel it redirection
            - Create AdressRedirectionMiddleware and 
            - register it in kernal.php  ---> 'address.redirection' => \App\Http\Middleware\AddressRedirection::class,
            - هطبق ده فين؟
                - هطبقه وانا رايحه صفحه ال وانا بضضط علي اد ادرس من الكارت
                    Route::get('/', 'index')->name('index')->middleware('address.redirection');
                    
                - هطبقه وانا رايحه صفحه ال وانا بضضط علي اد ادرس من الهوم
                    <@auth('web')
                        <li><a style="text-decoration: none" href="{{ route('users.profile.edit') }}"> {{__('user.profile.profile')}} </a></li>
                        <li><a style="text-decoration: none" href="{{ route('users.address.index') }}"> My Addresses </a></li>
                        <form method="POST" action="{{ route('users.logout') }}">
                            @csrf
                            <li><a style="text-decoration: none" href="route('users.logout')"
                                    onclick="event.preventDefault();
                                    this.closest('form').submit();"> {{__('user.header.logout')}} </a>
                            </li>
                        </form>
                    @else
            - how to get previous url in php, laravel
                - Middleware
                    handle(Request $request, Closure $next)
                        $previousUrl = url()->previous(); //هترجعهولي كامل 
                        if (basename($previousUrl) === 'cart') { // هترجعلي اخر كلمه في اليورل 
                            session()->put('redirect_url', route('cart')); هخزنه في السيشن بس مش مهمته انه يعمل ريديريكت
                        }
                        return $next($request);
                    }
                - Controller
                    if (session()->get('redirect_url')) {
                        $url = session()->get('redirect_url'); //خزنه وامسحه
                        session()->forget('redirect_url');
                        return redirect($url);
                    }
                    return redirect()->back()->with('success', 'Address has been created successfully');
            - اعرضلي في الادرس واعمل سليكت لاخر ادرس
                <option @selected($loop->last)>
                loop variable
C:\xampp\htdocs\ecommerce-b2\resources\views\user\address\edit.blade.php
<option @selected(old('region_id', $address->region->id) == $region->id) value="{{$region->id}}"> {{$region->name}}</option>


 $("#region").select2({ // turn on Select2
                        tags: true,
                        width: '100%'
        });
        $('#city').on('select2:select', function(event) {
            var city_id = event.target.value;
            const url = "{{ asset('api/regions') }}";
            const method = "POST";
            const body = {
                'city_id': city_id,
            };
            const button = $(this);
            $.ajax({
                url: url,
                type: method,
                headers: {
                    'accept': 'application/json'
                },
                data: body,
                success: function(result) {
                    $("#region").select2({ // turn on Select2
                        tags: true,
                        width: '100%'
                    });
                    $('#region').empty(); // Clear the options
                    $.each(result.data, function(index, value) { // append new options
                        var text = value.name.en;
                        var option = new Option(text, value.id);
                        $('#region').append(option);
                    });
                    $('#region').removeClass('d-none'); // show select 2
                },
                error: function(result) {
                    console.log(result);
                    Swal.fire(
                        'Failed',
                        'Something went wrong',
                        'error'
                    );
                }
            });
        });

        3- public function edit(Address $address)
            $address->load('region.city');
            $cities = City::where('status', 1)->get();
            $regions = Region::where('city_id', $address->region->city->id)->get(); // عشان اول ما بفتح الصفحه بيكون جايبهم
            return view('user.address.edit', compact('address', 'cities', 'regions'));
        
        4- public function update(StoreAddressRequest $request, Address $address) // زي الاستور ولكن بدون الريديركشن
            $address->update(array_merge($request->validated(), ['user_id' => Auth::guard('web')->id()]));
            return redirect()->route('users.address.index')->with('success', 'Address has been Updated successfully');
        
  
        
        5- public function destroy(Address $address)
            $address->delete();
            return redirect()->back()->with('success', 'Address has been deleted successfully');


        $controller user::with(['wishlists','carts','address.region.city'])

 


-----------------------------------------------------------------
- add address with single page app task
- max shipping handle نسبه ثابته
---------------------------



لو في شركه توصيل شحن محتاج يكون عندي API منها نعرف الاوردر وصل فين وتعرضه في الموقع 
location, db, status
هكلم الجوجل ماب google map for calulate distance بالدولار
وممكن عن طريق الphp without google map distance, speed, ومنها احسب الزمن
-------------
return from apply coupon
discount value, message
error message متعرضوش بالظبط invalid coupon
هعرض الماسدج من الفرونت اند واعملها كاستم عادي 
------------------------------------------------------------------------------------------------------------------------
26/5/2023
---------------------------------
coupon_user تابل العلاقه فيه عباره عن ال

اليوزر ايدي والكوبون ايدي مينفعش يتكرروا مع بعض فعملنا max_usage 
عشان لو حبيت اعرف كام مره اليوزر استخدم هذا الكوبون
وهنمسح coupon_expired_at

    - ApplyCouponRequest --> app\Http\Requests\Cart\ApplyCouponRequest.php
        - rules
            'user_id' => ['required', 'integer'],
            'couponCode' => ['required', 'string']
    - CouponController extends Controller --> app\Http\Controllers\Apis\User\CouponController.php
        - use ApiResponses;
        - apply(ApplyCouponRequest $request) 

            $cartProducts = new CartProducts(); --> App\Entities\CartProducts;
            $user = User::where('id', $request->user_id)->with(['coupons', 'carts'])->first();

            $coupon = Coupon::where('code', $request->couponCode)->withCount('users')->first();
            $shippingValue = OrderCalcs::shipping();
            if(!$user){
                return $this->error(['user' => 'user does not exist']);
            }
            if(!$coupon){
                return $this->error(['coupon' => 'coupon does not exist']);
            }
            foreach($user->carts as $product){
                $cartProduct = new ProductEntity();
                $cartProduct->setPrice($product->sale_price);
                $cartProduct->setQuantity($product->carts->quantity);
                $cartProducts->addProduct($cartProduct);
            }
            $subTotal = OrderCalcs::subTotal($cartProducts);
            
            
            // filtering query many to many outside model // هيرجعلي اليوزر بالكوبون اللي انا استخدمته هنا بس بالعلاقه
                $userCoupon = $user->with(['coupons'=>  function ($query) use($coupon)
                {
                    $query->where('coupon_id', $coupon->id);
                }])->first();
                
                $couponUsagePerUser = 0;
                foreach ($userCoupon->coupons as $dbCoupon) {
                    if ($dbCoupon->code == $coupon->code) {
                        $couponUsagePerUser = $dbCoupon->pivot->max_no_of_users_per_coupon; // ده لو مستخدم الكوبون عدد الاستخدمات
                    }
                }
            // بنجهز الحاجه اللي رايحه للسيرفس
            $maxUsageNumberPerUser = $coupon->max_usage_number_per_user;
            $orderCouponDiscountValue = $subTotal * ($coupon->discount / 100); خصم قد ايه
            $couponMaxDiscountValue = $coupon->max_discount_value; جبتها من الجدول اعلي قيمه
            $couponStatus = $coupon->status;  حالته
            $couponMaxUsageNumber = $coupon->max_usage_number; 
            $couponUsageCount = $coupon->users_count; 
            $couponMinOrderValue =$coupon->min_order_value;
            $couponEndDate = $coupon->end_date;
            $couponStartDate = $coupon->start_at;
            $couponCalcs = ApplyCouponService::apply($maxUsageNumberPerUser, $couponUsagePerUser, $orderCouponDiscountValue, $couponMaxDiscountValue, $couponStatus, $couponMaxUsageNumber, $couponUsageCount, $couponMinOrderValue, $couponEndDate, $couponStartDate, $subTotal);
            
            //  بعمل اختبار للكي اللي راجع من السيرفس وده مش استراكشر 
            if(Arr::has($couponCalcs, 'orderTotalAfterDiscount')){
                return $this->data(array_merge($couponCalcs, ['shipping' => $shippingValue]));
            }else{
                return $this->error($couponCalcs);
            }
            هنا في مشكله المفروض اني لما ارجع في السيرفس مرجعش key, value 
            لا المفروض ارجع اوبجكت في حاله السكسكس وحاله الايرور وهنا اعمل شيك علي الاوبجكت ده
            فانا كده مش محتاج افتح السيرفس عشان اقرا انكلود
            هعمل تشيك علي ميثود او بروبتي 
            مثال 
            لما انا بيرجعلي في كلاس ال validation error 
            بروح اعمل تشيك علي الرول والا $validator->fails(), $validator->success()

            وكمان السبب اللي خلاني استخدم سيرفس مش custom rule
            اني محتاج اعمل الرول علي حاجات من الداتا بيز مش اليوزر اللي مدخلها 
            ------------------------------------------------------------------------------------------
            - ApplyCouponService

                - apply(int $maxUsageNumberPerUser,int $couponUsagePerUser, float $orderCouponDiscountValue, float $couponMaxDiscountValue, int $couponStatus, int $couponMaxUsageNumber, int $couponUsageCount, float $couponMinOrderValue, $couponEndDate, $couponStartDate, float $subTotal): array
                    -----------------------------------------------------------------------
                    // $coupon->max_usage_number_per_user <= $dbCoupon->pivot->max_no_of_users_per_coupon
                    -----------------------------------------------------------------------
                    if ($maxUsageNumberPerUser  <= $couponUsagePerUser) {
                        return ['coupon' => 'This user can not use this coupon anymore'];
                    }

                    -----------------------------------------------------------------------
                    // $subTotal * ($coupon->discount / 100) > $coupon->max_discount_value
                    -----------------------------------------------------------------------
                    if ($orderCouponDiscountValue > $couponMaxDiscountValue) {  // لو اكبر خد اعلي قيمه للخصم من الجدول 
                        $orderTotal = $subTotal - $couponMaxDiscountValue;
                        $discountValue = $couponMaxDiscountValue;
                    } else {                                                    // اعلي قيمه للخصم من الجدول 
                        $orderTotal = $orderCouponDiscountValue;                // $subTotal * ($coupon->discount / 100) 
                        $discountValue = $orderCouponDiscountValue;
                    }
                    $discount = round(($discountValue / $subTotal) * 100, 2);
                    if ($couponStatus == 0) {
                        return ['coupon' => 'This coupon is not active'];
                    }
                    if ($couponUsageCount >= $couponMaxUsageNumber) {
                        return ['coupon' => 'This Coupon reached max number of usage'];
                    }
                    if ($subTotal < $couponMinOrderValue) {
                        return ['coupon' => 'The order value is lower than coupon min vaue to be applied'];
                    }
                    // how to get today date in carbon extension with this  Y-m-d H:i:s
                    if ((Carbon::now()->format('Y-m-d H:i:s') >= $couponStartDate) && (Carbon::now()->format('Y-m-d H:i:s') <= $couponEndDate)) {
                        return ['coupon' => 'This coupon is no longer valid'];
                    }
                    return ['coupon' => 'coupon applied', 'orderTotalAfterDiscount' => $orderTotal, 'discountPercent' => $discount, 'discountValue' => $discountValue, 'orderSubTotal' => $subTotal];

الساعه 9:30 واقعه
---------------------------------------------------------------
تعديلات مينا
في صفحه الكارت انا محتاج ال shippimg, subTotal 


CartController extends Controller --> app\Http\Controllers\Apis\User\CartController.php
    - use ApiResponses;

    - handle(CartRequest $request, CartProducts $cartProducts, OrderCalcs $orderCalcs)
        $user = User::with(['wishlists','carts', 'addresses.region.city'])->withCount('carts', 'wishlists')->findOrFail($request->user_id);
        $shippingCost = OrderCalcs::shipping();
        if($user->carts->contains($request->product_id)) {
            if($request->has('quantity')) {
                if($request->quantity == 0) {
                    $user->carts()->detach($request->product_id);
                    $subTotal = $this->cartSubTotal($user->load('carts')->first()->carts);
                    return $this->data(['carts_count' => --$user->carts_count, 'subTotal' => $subTotal, 'shipping' => $shippingCost], 'deleted in cart successfully', 200);
                }
                $user->carts()->updateExistingPivot($request->product_id, ['quantity' => $request->quantity]);
                $subTotal = $this->cartSubTotal($user->load('carts')->first()->carts);
                return $this->data([
                    'carts_count' => $user->carts_count,
                    'quantity' => $request->quantity,
                    'subTotal' => $subTotal,
                    'shipping' => $shippingCost
                    ], 'edited in cart successfully', 200);
            } else {
                $user->carts()->updateExistingPivot($request->product_id, ['quantity' => DB::raw('quantity + 1')]);
            }
            return $this->data(['carts_count' => $user->carts_count, 'shipping' => $shippingCost], 'edited in cart successfully', 200);
        } else {
            $user->carts()->attach($request->product_id);
            $subTotal = $this->cartSubTotal($user->load('carts')->first()->carts);
            return $this->data(['carts_count' => ++$user->carts_count, 'shipping' => $shippingCost], 'added to cart successfully', 201);
        }

        كل ما هيغير الكميه يبعت اجاكس ريكوست
    - getSubTotal(CartRequest $request)
    {
        $user = User::with(['wishlists','carts', 'addresses.region.city'])->withCount('carts', 'wishlists')->findOrFail($request->user_id);
        $shiipingValue = OrderCalcs::shipping();
        if($user->carts->contains($request->product_id)) {
            $subTotal = $this->cartSubTotal($user->carts);
            return $this->data(['subTotal' => $subTotal, 'shipping' => $shiipingValue]);
        }
    }

    - cartSubTotal($carts): float
    {
        $cartProducts = new CartProducts();
        foreach($carts as $product) {
            $cartProduct = new ProductEntity();
            $cartProduct->setPrice($product->sale_price);
            $cartProduct->setQuantity($product->carts->quantity);
            $cartProducts->addProduct($cartProduct);
        }
        return OrderCalcs::subTotal($cartProducts);
    }



- User/AddressController
    local scope
- cart/ApplyCouponRequest
'orderTotal'=> امسحها

---------------------------------------------------------------
cart.php
--------------
    - cart subtotal by js, php 
    
    -  اول ما تفتح صفحه الكارت هجيب الشيبنج اوردر كومباكت مع الفيو
        order shiping request وهنلغي الابي اي دي
        في حاله السكسس او الايرور نطلع سويت الرت مع الابلاي كوبون او سبان تحت الشيبنج
    - coupons start_date, end_date مش nullable
        احسب التوصيل في الكارت
    - مينا كان عنده مشكله انه بيمسح اتنين row

----------------------------------------------------------------
انا عاوز 3 ajax
----------------
    1- يمسح البرودكت الواحد 
    2- يعدل الانبوتس في كل مره بغير الكميه 
    3- يغير التوتل بعد الشيبنج
----------------------------------------------------------------
الابي اي سب توتل صح في البوست مان 
لكن في الفرونت راجع غلط
----------------------------------------------------------------
 <form class="bg0 p-t-75 p-b-85">

    <table class="table-shopping-cart">
        <tr class="table_head">
            <th class="column-1 text-center"> {{ __('messages.frontend.cart.product') }} </th>
            <th class="column-2 text-center"></th>
            <th class="column-3 text-center"> {{ __('messages.frontend.cart.price') }} </th>
            <th class="column-4 text-center"> {{ __('messages.frontend.cart.quantity') }} </th>
            <th class="column-5 text-center"> {{ __('messages.frontend.cart.total') }} </th>
        </tr>
        @foreach ($user->carts as $index=>$product)
            <tr class="table_row">
                <td class="column-1">
                    <div class="how-itemcart1 deleteProduct" data-product="<?= htmlspecialchars($product) ?>">
                        <img src="{{ $product->getFirstMediaUrl('product', 'preview') }}" alt="IMG">
                    </div>
                </td>
                <td class="column-2">{{ $product->name }}</td>
                <td class="column-3 productPrice"> {{ $product->sale_price_with_currency() }} </td>
                <td class="column-4">
                    <input data-product="<?= htmlspecialchars($product) ?>"
                        class="mtext-104 cl3 txt-center num-product product" type="number"
                        pre-value="{{ $product->carts->quantity }}"
                        name="num-product1" value="{{ $product->carts->quantity }}">
                    </div>
                </td>
                <td class="column-5 productTotal">
                    {{ $product->sale_price_with_currency($product->carts->quantity) }}</td>
            </tr>
        @endforeach
    </table>
    <div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
        <div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
            <h4 class="mtext-109 cl2 p-b-30">
                {{ __('messages.frontend.cart.cart_total') }}
            </h4>

            <div class="flex-w flex-t bor12 p-b-13">
                <div class="size-208">
                    <span class="stext-110 cl2">
                        {{ __('messages.frontend.cart.subtotal') }}
                    </span>
                </div>

                <div class="size-209m subTotal">
                    <span class="mtext-110 cl2" id="subTotal">
                        {{ $subTotal }} {{ __('user.shared.currency') }}
                    </span>
                </div>
            </div>

            <div class="flex-w flex-t bor12 p-t-15 p-b-30">
                <div class="size-208 w-full-ssm">
                    <span class="stext-110 cl2">
                        Address
                    </span>
                </div>

                <div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
                    <p class="stext-111 cl6 p-t-2">
                        {{ __('messages.frontend.cart.select_address') }}
                    </p>

                    <div class="p-t-15">
                        @if ($user->addresses)
                            <div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
                                <select class="js-select2" name="time" id="address">
                                    @foreach ($user->addresses as $address)
                                        <option @selected($loop->last) value="{{ $address->id }}">
                                            {{ $address->region->city->name }},
                                            {{ $address->region->name }},
                                            {{ $address->street }},
                                            {{ __('messages.frontend.cart.building') }}:
                                            {{ $address->building }} -
                                            @if ($address->floor)
                                                {{ __('messages.frontend.cart.floor') }}:
                                                {{ $address->floor }} -
                                            @endif
                                            @if ($address->flat)
                                                {{ __('messages.frontend.cart.flat') }}: {{ $address->flat }}
                                                -
                                            @endif
                                            @if ($address->notes)
                                                {{ __('messages.frontend.cart.notes') }}:
                                                {{ $address->notes }} -
                                            @endif
                                            ({{ $address->type }})
                                        </option>
                                    @endforeach
                                </select>
                                <div class="dropDownSelect2"></div>
                            </div>
                        @else
                            <p> {{ __('messages.frontend.cart.no_addresses') }} </p>
                        @endif
                    </div>
                </div>
                <div class="flex-w flex-m m-r-20 m-tb-5">
                    <a href="{{ route('users.address.index') }}" class="button-main pointer m-tb-5 "
                        user-value="{{ $user->id }}">
                        {{ __('messages.frontend.cart.add_address') }}
                    </a>
                </div>
            </div>
            <div class="flex-w flex-sb-m  p-t-18 p-b-15 ">
                <div class="flex-w flex-m m-r-20 m-tb-5">
                    <input class="stext-104 cl2 plh4 bor13 p-lr-20 m-r-10 m-tb-5 coupon" type="text" id="coupon"
                        name="coupon" placeholder="{{ __('messages.frontend.cart.coupon_code') }}"
                        value="{{ old('coupon') }}" style="height: 2.5rem">
                    <p id="couponMessage"></p>
                    <button type="button" disabled="disabled" btn-type="apply" class="button-main pointer m-tb-5 applyCoupon" id="applyCoupon" user-value="{{ $user->id }}">
                        {{ __('messages.frontend.cart.apply_coupon') }}
                    </button>
                </div>
            </div>

            <div class="flex-w flex-t p-t-27 pb-2" id="shipping">
                <div class="size-208">
                    <span class="mtext-101 cl2">
                        {{ __('messages.frontend.cart.shipping') }}:
                    </span>
                </div>
                <div class="size-209 p-t-1">
                    <span class="mtext-110 cl2" id="shippingValue" shipping-value="0">
                        {{$shipping}} EGP
                    </span>
                </div>
            </div>
            <div class="flex-w flex-t p-t-27 pb-2 d-none" id="discount">
                <div class="w-25">
                    <span class="mtext-101 cl2">
                        {{ __('messages.frontend.cart.discount') }}:
                    </span>
                </div>
                <div class="w-50 p-t-1">
                    <span class="mtext-110 cl2" id="couponDiscount">

                    </span>
                </div>
            </div>
            <div class="flex-w flex-t p-t-27 p-b-33">
                <div class="size-208">
                    <span class="mtext-101 cl2">
                        {{ __('messages.frontend.cart.total') }}:
                    </span>
                </div>
                <div class="size-209 p-t-1">
                    <span class="mtext-110 cl2" id="orderTotal">
                        {{ $subTotal + $shipping }} {{ __('user.shared.currency') }}
                    </span>
                </div>
            </div>
            <a href="{{route('users.order.invoice-cart')}}" class="flex-c-m cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer"
                style="height: 2.5rem">
                {{ __('messages.frontend.cart.proceed') }}
            </a>
        </div>
    </div>
</form>
@push('scripts')
    <script>
        var translations = {
            currency: "{{ __('user.shared.currency') }}",
            couponSaving: "{{ __('messages.frontend.cart.coupon_saving') }}",
            couponFailed: "{{ __('messages.frontend.cart.coupon_failed') }}"
        };
        const subtotal = $('#subTotal');
        let subTotal = parseFloat('{{$subTotal}}');
        let shipping = parseFloat('{{$shipping}}');
        $(document).ready(function() {

            $('#address').on('select2:select', function(e) {
                const url = "{{ asset('api/products/carts/getShipping') }}";
                const method = "POST";
                // $.ajax({
                //     url: url,
                //     type: method,
                //     headers: {
                //         'accept': 'application/json'
                //     },
                //     success: function(result, status, xhr) {
                //         $('#shipping').removeClass('d-none');
                //         $('#shippingValue').html(result.data.shipping + ' ' + translations.currency)
                //         $('#shippingValue').attr('shipping-value', result.data.shipping)

                //     },
                //     error: function(xhr, status, error) {
                //         Swal.fire(
                //             'Failed',
                //             'somthing went wrong',
                //             'error'
                //         );
                //     },
                // });
            });

            $('.applyCoupon').click(function() {
                if ($(this).attr('btn-type') == 'apply') {
                    applyCoupon();
                } else {
                    $('#coupon').val('').removeAttr('disabled');
                    $('#applyCoupon').html("Apply Coupon").attr('btn-type', 'apply').attr('disabled', 'disabled');
                    $('#couponDiscount').html('');
                    $('#discount').addClass('d-none');
                    $('#couponMessage').html('').removeClass('text-danger').removeClass('text-success');
                    $('#orderTotal').html(subTotal + shipping + translations.currency);
                }
            });
            
            function applyCoupon(htmlChanges = true) {
                    const user_id = {{Auth::id()}};
                    const coupon = $('.coupon').val();
                    const url = "{{ asset('api/products/carts/applyCoupon') }}";
                    const method = "POST";
                    const body = {
                        'user_id': user_id,
                        'couponCode': coupon,
                    };
                    $.ajax({
                        url: url,
                        type: method,
                        headers: {
                            'accept': 'application/json'
                        },
                        data: body,
                        success: function(result, status, xhr) {
                            $('#couponDiscount').html(result.data.discountValue + " " + translations
                                .currency + " " + translations.couponSaving + result.data
                                .discountPercent + "%");
                            const total = result.data.orderTotalAfterDiscount + result.data.shipping;
                            $('#orderTotal').html(total + translations.currency);
                            if (htmlChanges) {
                                $('#discount').removeClass('d-none');
                                $('#couponMessage').html('Coupon Applied').removeClass('text-danger').addClass('text-success');
                                $('#coupon').attr('disabled', 'disabled');
                                $('#applyCoupon').html("Remove Coupon").attr('btn-type', 'remove');
                            }
                        },
                        error: function(xhr, status, error) {
                            $('#couponMessage').html(translations.couponFailed).removeClass('text-success').addClass('text-danger');
                        },
                    });
            }

            $('.product').change(function() {
                var product = $(this).data('product')
                const shipping = parseFloat("<?= $shipping ?>")
                const product_id = product.id;
                const user_id = product.carts.user_id;
                const quantity = $(this).val()
                const url = "{{ asset('api/products/carts/handle') }}";
                const method = "POST";
                const body = {
                    'user_id': user_id,
                    'product_id': product_id,
                    'quantity': quantity,
                };
                const tableRow = $(this).closest('.table_row');
                if (quantity != 0) {
                        $.ajax({
                        url: url,
                        type: method,
                        headers: {
                            'accept': 'application/json'
                        },
                        data: body,
                        success: function(result, status, xhr) {
                            applyCoupon(false);
                            subTotal = updateSubTotal(result);
                            updateTotal(subTotal, shipping);
                        },
                        error: function(xhr, status, error) {
                            Swal.fire(
                                'Failed',
                                'somthing went wrong',
                                'error'
                            );
                        }
                    });
                }
                if (quantity == 0) {
                    rowAlert(this);
                }
            });

            $('.deleteProduct').click(function() {
                // ajax
                // delete row
                rowAlert(this);
            });

            $('#coupon').on('keyup', function () {
                if ($(this).val() == '') {
                    $('#applyCoupon').attr('disabled', 'disabled');
                } else {
                    $('#applyCoupon').removeAttr('disabled');
                }
            });

            function updateSubTotal(result) {
                subTotal = result.data.subTotal;
                $('#subTotal').html(subTotal + " " + translations.currency);
                return subTotal;
            }

            function updateTotal(subTotal, shipping) {
                $('#orderTotal').html(subTotal + shipping + translations.currency);
            }

            function updateSubTotalOnDelete() {

            }

            function rowAlert(event) {
                Swal.fire({
                title: 'Are you sure You Want to Delete This Product?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteRow(event);
                        Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                        );
                    } else {
                        $(event).val($(event).attr('pre-value'));
                    }
                });
            }

            function deleteRow(event) {
                var product = $(event).data('product')
                const product_id = product.id;
                const user_id = product.carts.user_id;
                const quantity = 0;
                const url = "{{ asset('api/products/carts/handle') }}";
                const method = "POST";
                const body = {
                    'user_id': user_id,
                    'product_id': product_id,
                    'quantity': quantity,
                };
                const tableRow = $(event).closest('.table_row');
                $.ajax({
                    url: url,
                    type: method,
                    headers: {
                        'accept': 'application/json'
                    },
                    data: body,
                    success: function(result, status, xhr) {
                        console.log(tableRow);
                        tableRow.remove();
                        $('#cart').attr('data-notify', result.data.carts_count);
                        applyCoupon(false);
                        subTotal = updateSubTotal(result);
                        updateTotal(subTotal, shipping);
                    },
                    error: function(xhr, status, error) {
                        Swal.fire(
                            'Failed',
                            'somthing went wrong',
                            'error'
                        );
                    }
                });
            }


        })
    </script>
@endpush

----------------------------------------------------------------
task:-
---------------
الخطوه الجايه ايه؟
اعرضله فاتوره بالتفاصيل 
كل حاجه 
زرار ضيف اوردر
invoice template رقم الفاتوره لا
1- record in coupon user
2- record order (pending, shipped, delivered)
index, coupon, وهتحسب الحسبه تاني
order controller 
page يشوفه فيها
------------------------------------------------------------------------------------------
@push('scripts')
    <script>
        var translations = {
            currency: "{{ __('user.shared.currency') }}",
            couponSaving: "{{ __('messages.frontend.cart.coupon_saving') }}",
            couponFailed: "{{ __('messages.frontend.cart.coupon_failed') }}"
        };
        const subtotal = $('#subTotal');
        let subTotal = parseFloat('{{$subTotal}}');
        let shipping = parseFloat('{{$shipping}}');
        $(document).ready(function() {

            $('#address').on('select2:select', function(e) {
                const url = "{{ asset('api/products/carts/getShipping') }}";
                const method = "POST";
                // $.ajax({
                //     url: url,
                //     type: method,
                //     headers: {
                //         'accept': 'application/json'
                //     },
                //     success: function(result, status, xhr) {
                //         $('#shipping').removeClass('d-none');
                //         $('#shippingValue').html(result.data.shipping + ' ' + translations.currency)
                //         $('#shippingValue').attr('shipping-value', result.data.shipping)

                //     },
                //     error: function(xhr, status, error) {
                //         Swal.fire(
                //             'Failed',
                //             'somthing went wrong',
                //             'error'
                //         );
                //     },
                // });
            });

            $('.applyCoupon').click(function() {
                if ($(this).attr('btn-type') == 'apply') {
                    applyCoupon();
                } else {
                    $('#coupon').val('').removeAttr('disabled');
                    $('#applyCoupon').html("Apply Coupon").attr('btn-type', 'apply').attr('disabled', 'disabled');
                    $('#couponDiscount').html('');
                    $('#discount').addClass('d-none');
                    $('#couponMessage').html('').removeClass('text-danger').removeClass('text-success');
                    $('#orderTotal').html(subTotal + shipping + translations.currency);
                }
            });
            
            function applyCoupon(htmlChanges = true) {
                    const user_id = {{Auth::id()}};
                    const coupon = $('.coupon').val();
                    const url = "{{ asset('api/products/carts/applyCoupon') }}";
                    const method = "POST";
                    const body = {
                        'user_id': user_id,
                        'couponCode': coupon,
                    };
                    $.ajax({
                        url: url,
                        type: method,
                        headers: {
                            'accept': 'application/json'
                        },
                        data: body,
                        success: function(result, status, xhr) {
                            $('#couponDiscount').html(result.data.discountValue + " " + translations
                                .currency + " " + translations.couponSaving + result.data
                                .discountPercent + "%");
                            const total = result.data.orderTotalAfterDiscount + result.data.shipping;
                            $('#orderTotal').html(total + translations.currency);
                            if (htmlChanges) {
                                $('#discount').removeClass('d-none');
                                $('#couponMessage').html('Coupon Applied').removeClass('text-danger').addClass('text-success');
                                $('#coupon').attr('disabled', 'disabled');
                                $('#applyCoupon').html("Remove Coupon").attr('btn-type', 'remove');
                            }
                        },
                        error: function(xhr, status, error) {
                            $('#couponMessage').html(translations.couponFailed).removeClass('text-success').addClass('text-danger');
                        },
                    });
            }

            $('.product').change(function() {
                var product = $(this).data('product')
                const shipping = parseFloat("<?= $shipping ?>")
                const product_id = product.id;
                const user_id = product.carts.user_id;
                const quantity = $(this).val()
                const url = "{{ asset('api/products/carts/handle') }}";
                const method = "POST";
                const body = {
                    'user_id': user_id,
                    'product_id': product_id,
                    'quantity': quantity,
                };
                const tableRow = $(this).closest('.table_row');
                if (quantity != 0) {
                        $.ajax({
                        url: url,
                        type: method,
                        headers: {
                            'accept': 'application/json'
                        },
                        data: body,
                        success: function(result, status, xhr) {
                            applyCoupon(false);
                            subTotal = updateSubTotal(result);
                            updateTotal(subTotal, shipping);
                        },
                        error: function(xhr, status, error) {
                            Swal.fire(
                                'Failed',
                                'somthing went wrong',
                                'error'
                            );
                        }
                    });
                }
                if (quantity == 0) {
                    rowAlert(this);
                }
            });

            $('.deleteProduct').click(function() {
                // ajax
                // delete row
                rowAlert(this);
            });

            $('#coupon').on('keyup', function () {
                if ($(this).val() == '') {
                    $('#applyCoupon').attr('disabled', 'disabled');
                } else {
                    $('#applyCoupon').removeAttr('disabled');
                }
            });

            function updateSubTotal(result) {
                subTotal = result.data.subTotal;
                $('#subTotal').html(subTotal + " " + translations.currency);
                return subTotal;
            }

            function updateTotal(subTotal, shipping) {
                $('#orderTotal').html(subTotal + shipping + translations.currency);
            }

            function updateSubTotalOnDelete() {

            }

            function rowAlert(event) {
                Swal.fire({
                title: 'Are you sure You Want to Delete This Product?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteRow(event);
                        Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                        );
                    } else {
                        $(event).val($(event).attr('pre-value'));
                    }
                });
            }

            function deleteRow(event) {
                var product = $(event).data('product')
                const product_id = product.id;
                const user_id = product.carts.user_id;
                const quantity = 0;
                const url = "{{ asset('api/products/carts/handle') }}";
                const method = "POST";
                const body = {
                    'user_id': user_id,
                    'product_id': product_id,
                    'quantity': quantity,
                };
                const tableRow = $(event).closest('.table_row');
                $.ajax({
                    url: url,
                    type: method,
                    headers: {
                        'accept': 'application/json'
                    },
                    data: body,
                    success: function(result, status, xhr) {
                        console.log(tableRow);
                        tableRow.remove();
                        $('#cart').attr('data-notify', result.data.carts_count);
                        applyCoupon(false);
                        subTotal = updateSubTotal(result);
                        updateTotal(subTotal, shipping);
                    },
                    error: function(xhr, status, error) {
                        Swal.fire(
                            'Failed',
                            'somthing went wrong',
                            'error'
                        );
                    }
                });
            }


        })
    </script>
@endpush
------------------------------------
2/6/2023
---------------
1- UserCrudAdmin
- delete()
    $user->addresses->delete قبل ما تمسح اليوزر امسح عنوانه
    مستخدم عمل اوردر ينفع امسح اليوزر ده؟
    الاوردر ميتمسحش حتي لو اليوزر اتمسح عشان ايرادات الموقع التوتل 
    ارفض مسح اليوزر طول ما عمل اوردر ممكن اغير حالته
    status in view toggle btn
    blocked, active, notActive
    
    if($user->addresses->orders->count())// مش هتنفع وهنمشي الموضوع من العكس 
    if(Order::whereIn('address_id', $user->addresses->pluck('id')->toArray)->count()){
        return back()->with('error', "error")
    }else{
        امسح العناوين والويشليست والادرس والكارت وبعدين اليوزر
        one to many
            $user->addresses()->delete()
        many to many 
            $user->carts()->detach()
            $user->wishlists()->detach()
            $user->favs()->detach()
        
        $user->delete();
        بداخل الكنترولر او بطريقه تانيه 
        ممكن جوه المودل تهندل الكلام ده في ميثود اسمها boot 
        هحدد فيها ايه بالظبط اللي وقت ما امسح واقول يوزر دليت اتوماتك يكون ماسحها
    };
    Order::whereIn('address_id', [1,2])->get(); معناها روح هات كل الاوردرات اللي الادرس ايدي بتاعها 1و2 

    Order::whereIn('address_id', $user->addresses->pluck('id')->toArray)->count(); 

    if($user->addresses->orders->count()) منفعتش علشان دي عباره عن loop
    اليوزر مربوط بالاردر عن طريق الادرس

- store()
    User::create([
        'name' => $request->name
        'email' =>$request->email,
        'phone' =>$request->phone,
        'password' =>Hash::make($request->password),
        'email_verified_at'=> Carbon::now()->format('Y-m-d H:i:s')
    ]);
    return redirect()->route('admin.users.index')->with('success', ....);
    مش هعمله الايفنت بتاع ال mailTrap
    المفروض الايميل مش فريفيد 
    فوانا بكريت اعمله فريفيد
    ----
    Add to create user and edit user 
        - status( active, block ) as adropdown
        - ( verified, unverified ) as adropdown

- update(UpdateUserRequest $request, User $user)
    UpdateUserRequest
        rules()
            $user = $this->route('user');
            return [
                'name' => ['required','string','max:255','min:3'],
                'email' => ['required','string','email','max:255','unique:users,email,'. $user->id],
                'phone' => ['required','regex...','unique:users,phone,'. $user->id],
                'password' => ['nullable', 'confirmed', Password::defaults()],
            ]
    if($request->email != $user->email){ // عشان لو هيبعت ميل بس انا مش محتاجها هنا
        if($request->password == null) // مش محتاجها انت عامل الباسورد في الريكوست ابديت بس برضه فيها مشكله 
        انا ممكن افصل تعديل الباسورد عن تعديل معلومات اليوزر 
        لان انا لو بعت الباسورد فاضيه مش قاريها انها ممكن تقبل null 
        وبيعملي ايرور 

        User::update($request->validated())
        فانا هفصل انه يعمل تغير للباسورد في زرار لوحده 
        وده يتم علي المستخدمين اللي الادمن عملهم كريت فقط

    make flag in table users (created_by) user, admin
    وانا بعمل ريجستر كيوزر هضيف في الجدول ده اليوزر
    لو بكريت يوزر من الادمن حط فيه الادمن
    واعمل كوندشن علي الزرار بقي بتاع  changePassword
    
    ------------- 
    وانا بضيف الادرس عايز بعد ما يخلص يرجعني للصفحه اللي قبل قبل اللي فاتت
    by session هتخزن فيها اللينك السابق في زرار الاديت اللي جمب الادرس
    امسح الميجريشن بتاع واحد فيهم ال favs / migration drop table
    وهنا عمل صفحه تعرض اليوزر بتفاصيله عنوانه والكارت والكوبون والاردارات ......
    واقدر كمان اضيف او اعدل او امسح عنوان
    --------------

- show()
    $user->load(['addresses.region.city', 'addresses.orders', 'favs', 'carts.media', 'wishlists','reviews.product','coupons'])
        showblade
        @foreach ($user->coupons as $index => $coupon)
        علاقه many to many
        <td>{{$coupon->code}}</td>
        <td>{{$coupon->status}}</td>
        <td>{{$coupon->pivot->max_no_usage}}</td>
        ممكن اضيف حاجه 
        current usage of coupon / no of usage user

-------------------------------------------------------------------------
order task
Modal cart هنبعت اجيكس ركوست عشان يكون ريل تايم
make table in db setting website بدل ما اجيب البيانات من ال env
(name, email json , phone, logo(media))
محتويات الصفحه 

how to print page by jquery chat-gpt 

problem صفحه 
هروح اعمل جدول في الداتابيز preorder(id, user_id, address_id, coupon_id, product_ids(json ex [1,2,3]))
    user, address, coupon ,products 
مينفعش اعتمد علي الكارت لانه بيتغير وبيتمسح

procedure (get request)  اول ماروح اضغط عليه ابعت الحاجات في جدول البرياوردر
هتتبعت في الurl لانها جت وده مش سكيور

هبعت اتنين 
ومتعدمتش علي السيشن
procedure (post request)  
procedure (get request)  
واحمي الراوت 
(store,delete,update) --> post 
-----------------
make my orders 
جدول فيه كل التفاصيل الاوردارات
لو الاوردر pending بغير حالته بس ) نقدر نكنسله
زود الstatus order
ويقدر يعمل عرض للاوردر وبالتالي الفاتوره تظهرله
-----------------
payment قبل ال press order
جت واي ماستر وعندي بيانات اللي واخدها 
هحط بيانات الكارت ويعمل ريديريكت علي صفحه البنك 
ومهمتي اقول للبنك اخصم المبلغ الفلاني 
ويرجعلك الترانساكشن ايدي من البنك
هتسطب الباكدج 
وتحسب الفوس اللي هتتخصم وتبعتها للبنك
وتستقبل ال  transaction_id in order Table وتخزنه عندك
payment جدول ده بنحط فيه الميثود بس
---------------------------------------------

تعديلات مينا
-----------
prototype to ApplyCouponService
ApplyCouponDataEntity 
ApplyCouponErrorEntity
الافضل واحده بس 

price order again هنقلل الكميه فهتسمع في الصفحه الhome add where quantity >0
,cart id المنتج < quantity cart  هيحصل مشكله
عمل فاتوره html
ضاف الcancel 

live chat admin, seller
95 موبايل ابليكيشن و فرونت اند
بوشر /فير بيز/ سوكتس
الريكوست بيتبعت htttp request منتظر response 
syncrouzation 

لكن اللايف شات 

front end 
   SP channel مش شرط انه مرضش الا لما تبعت ريكوست مفيش تزامن as event, listener 
backend


1- real time concept
2- real time app 
3- real time chat by js معظمه 
---------------------------------------------
git pull origin master
migrate 
-------------------------
9/6/2023
-----------
php artisan queue:work
3 mails order الفاتوره وشكلها بيتغير في التلاته
to user, to seller, to admin (info-seller)
// add column address to seller

jops تشتغل 
open mail trap

mail
ممكن نبعت الفاتوره pdf 
user-order-mail.blade.php
    كل حاجه في الكنترولر ونبعتها جاهزه
    1- ايميل اليوزر اعرض الحاجه فقط 
    {{$email->username}} هبعتهم اوبجكت 
    {{$username}} اوابعتهم فريبلز

OrderControllerListener
    3k $event
    variable $prototype الداتا اللي هتروح للفيو الميل
    هعمله assign in service
    هنده عليها بره الlistener 
    وهبعت ده عن طريق الايفنت
    handel($event)
    SendOrderMailUserJob::dispatch($event->user)

Entities/Contracts/UserOrderMailEntityInterface
    يجبرني اني اكريت بروبرتي معينه
    public function getWebsiteName():string;
    public function setWebsiteName(string $name):void;
    public function getWebsiteEmail():string;
    public function setWebsiteEmail(string $email):void;
    public function getWebsiteAddress():string;
    public function setWebsiteAddress(string $address):void;
    public function getUserName():string;
    public function setUserName(string $name):void;
    public function getUserEmail():string;
    public function setUserEmail(string $email):void;
    public function getUserAddress():string;
    public function setUserAddress(string $address):void;
    في ابسط حاله كده لكن المنتج اراي فانا هستخدمها هنا من بروتوتيب تانيه 
    Payment method جدول جديد 

    ProductEntityInterface
        price, name, code, quantity

    ProductEntity 
        private $price,....
        واعمله setter, getter
    هروح اضيفه هناك بقي في انترفيس الميل يوزر
    public function getProducts():array;
    public function setProducts(ProductEntityInterface $product):void; 
    //كده هيفهم انه اوبجكت انا عاوز افهمه انه اراي ازاي؟
    هنعملها في الامبلمنتيشن بتاع الانتيتي

    public function getTotal():float;
    public function setTotal(float $total):void;
    public function getSubTotal():float;
    public function setSubTotal(float $total):void;
    public function getDiscount():float;
    public function setDiscount(float $subTotal):void;
    public function getShipping():float;
    public function setShipping(float $shipping):void;
    public function getCoupon():string;
    public function setCoupon(string $coupon):void;

UserOrderMailEntity implement UserOrderMailEntityInterface
    - private string $websiteName;
    - private string $websiteEmail;
    - private string $websiteAddress;
    - private string $userName;
    - private string $userEmail;
    - private string $userAddress;
    - private array $products;
    - private float $total;
    - private float $subTotal;
    - private float $discount;
    - private float $shipping;
    - private string $coupon;
    - implement all properties 
        public function getCoupon():string{
            return $this->coupon;
        }
        public function setCoupon(string $coupon):void{
            $this->coupon = $coupon;
        }
        ---------------------------
        public function getProducts():array{
            return $this->products;
        }
        public function setProducts(ProductEntityInterface $product):void{
            $this->products[] = $product;
        }
------------
نسينا الوقت وكمان الاوردر نمبر
هكرر ده للادمن والسيلر
Admin
    - copy user interface
    - replace website data-> seller data
Seller
    - copy user interface
    - add stock

OrderMailEntityInterface --> interface sharable
    - هحط فيه كل المتكرر 
    - OrderCode string
    - OrderCreationDate string
    - OrderDeliveryDate string
واعرفهم في الادمن واليوزر والسيلر انتتي 
    - private string $orderCode
    - private string $orderCreationDate
    - private string $orderDeliveryDate
    - setter, getter for all
Event 
    UserOrderMailEntityInterface $user
    AdminOrderMailEntityInterface $admin
    SellerOrderMailEntityInterface $seller
User/OrderController
$prepareMailData = new PrepareOrderMailDataService($user, $admin, $order, $products, $address, $coupon, $shippingValue, $discountPercent,$subTotal)
188 OrderCreatedEvent::dispatch($prepareMailData->user, $prepareMailData->admin, $prepareMailData->seller)
PrepareOrderMailDataService
 ---------------------------------------  
    __construct(
        private UserOrderMailEntityInterface $user
    )
=========

    private UserOrderMailEntityInterface $user
    __construct(
        $this->user =$user;
    )
------------------------
بس ده مش هينفع انا عاوز الانستنس جوه الكلاس نفسه 
private UserOrderMailEntityInterface $userEntity
private AdminOrderMailEntityInterface $adminEntity
private SellerOrderMailEntityInterface $sellerEntity
 
__construct(
    private User $user,
    private Admin $admin,
    private Order $order,
    private Collection $products,
    private Address $address,
    private ?string $coupon,
    private float $shippingValue,
    private float $discountPercent,
    private float $subTotal) //subtotal 
    {
        $this->userEntity =  new UserOrderMailEntity;
        $this->adminEntity =  new AdminOrderMailEntity;
        $this->sellerEntity =  new SellerOrderMailEntity;
        $this->prepareData();
    }
    private function prepareData(){
        //common 
            - $userName
            $this->userEntity->setUserName($this->user->name);
            $this->adminEntity->setUserName($this->user->name);
            $this->sellerEntity->setUserName($this->user->name);
            - $userEmail            $this->user->email
            - $Coupon               $this->coupon
            - $orderCode            $this->order->code
            - $orderCreationDate    $this->order->created_at
            - $orderDeliveredDate   $this->order->delivery_at
            - $subTotal $this->subTotal
            - $Discount $this->discount
            - $Shipping $this->shipping
            - $total = $this->subtotal  
            - $userAddress            $this->address->getFullAddress()

        //user

        //admin

        //seller
    }
add setting table in db 
    id, name, email, phone,  
seeder websiteSetting واضيفه في 

DatabaseSeeder.php
.....::create{

}
--------------------------------------------
event prepare data and send it to listener لا
__construct(){

}
----------------------------------------------
add to cart without login ?????
